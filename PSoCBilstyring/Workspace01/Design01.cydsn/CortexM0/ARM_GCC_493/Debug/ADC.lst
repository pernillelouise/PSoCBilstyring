ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_idiv
  18              		.section	.text.ADC_Init,"ax",%progbits
  19              		.align	2
  20              		.global	ADC_Init
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_Init, %function
  24              	ADC_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 2


  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 3


  89:.\Generated_Source\PSoC4/ADC.c **** *
  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  27              		.loc 1 95 0
  28              		.cfi_startproc
  29 0000 10B5     		push	{r4, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 4


 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  33              		.loc 1 172 0
  34 0002 0E20     		mov	r0, #14
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  38              		.loc 1 173 0
  39 000a 0E20     		mov	r0, #14
  40 000c 4249     		ldr	r1, .L12
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  43              		.loc 1 177 0
  44 0012 0322     		mov	r2, #3
  45 0014 414B     		ldr	r3, .L12+4
  46 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  47              		.loc 1 180 0
  48 0018 414B     		ldr	r3, .L12+8
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 5


  49 001a 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 178 0
  51 001c 002B     		cmp	r3, #0
  52 001e 01DA     		bge	.L10
  53 0020 4049     		ldr	r1, .L12+12
  54 0022 00E0     		b	.L2
  55              	.L10:
  56 0024 4049     		ldr	r1, .L12+16
  57              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  58              		.loc 1 178 0 is_stmt 0 discriminator 4
  59 0026 414A     		ldr	r2, .L12+20
  60 0028 1368     		ldr	r3, [r2]
  61 002a 0B43     		orr	r3, r1
  62 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  63              		.loc 1 182 0 is_stmt 1 discriminator 4
  64 002e 404A     		ldr	r2, .L12+24
  65 0030 404B     		ldr	r3, .L12+28
  66 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  67              		.loc 1 183 0 discriminator 4
  68 0034 404A     		ldr	r2, .L12+32
  69 0036 414B     		ldr	r3, .L12+36
  70 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  71              		.loc 1 184 0 discriminator 4
  72 003a 0023     		mov	r3, #0
  73 003c 404A     		ldr	r2, .L12+40
  74 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  75              		.loc 1 185 0 discriminator 4
  76 0040 404A     		ldr	r2, .L12+44
  77 0042 4149     		ldr	r1, .L12+48
  78 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 186 0 discriminator 4
  80 0046 4149     		ldr	r1, .L12+52
  81 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  82              		.loc 1 190 0 discriminator 4
  83 004a 414A     		ldr	r2, .L12+56
  84 004c 1168     		ldr	r1, [r2]
  85 004e 8020     		mov	r0, #128
  86 0050 4002     		lsl	r0, r0, #9
  87 0052 0143     		orr	r1, r0
  88 0054 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  89              		.loc 1 193 0 discriminator 4
  90 0056 3F49     		ldr	r1, .L12+60
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 6


  91 0058 0A68     		ldr	r2, [r1]
  92 005a 0243     		orr	r2, r0
  93 005c 0A60     		str	r2, [r1]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  94              		.loc 1 197 0 discriminator 4
  95 005e 3E4A     		ldr	r2, .L12+64
  96 0060 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 198 0 discriminator 4
  98 0062 3E4A     		ldr	r2, .L12+68
  99 0064 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 100              		.loc 1 199 0 discriminator 4
 101 0066 0133     		add	r3, r3, #1
 102 0068 3D4A     		ldr	r2, .L12+72
 103 006a 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 104              		.loc 1 202 0 discriminator 4
 105 006c 0221     		mov	r1, #2
 106 006e 3D4A     		ldr	r2, .L12+76
 107 0070 1160     		str	r1, [r2]
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 108              		.loc 1 206 0 discriminator 4
 109 0072 3D49     		ldr	r1, .L12+80
 110 0074 0868     		ldr	r0, [r1]
 111              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 112              		.loc 1 207 0 discriminator 4
 113 0076 3D4A     		ldr	r2, .L12+84
 114 0078 0240     		and	r2, r0
 115              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 116              		.loc 1 213 0 discriminator 4
 117 007a 1343     		orr	r3, r2
 118              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 7


 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 119              		.loc 1 226 0 discriminator 4
 120 007c 0B60     		str	r3, [r1]
 121              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 4
 123 007e 0024     		mov	r4, #0
 124 0080 47E0     		b	.L3
 125              	.LVL6:
 126              	.L9:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 127              		.loc 1 234 0
 128 0082 3B49     		ldr	r1, .L12+88
 129 0084 A200     		lsl	r2, r4, #2
 130 0086 5058     		ldr	r0, [r2, r1]
 131 0088 DC23     		mov	r3, #220
 132 008a 9B01     		lsl	r3, r3, #6
 133 008c 0340     		and	r3, r0
 134              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 135              		.loc 1 236 0
 136 008e 0919     		add	r1, r1, r4
 137 0090 097A     		ldrb	r1, [r1, #8]
 138 0092 0B43     		orr	r3, r1
 139              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 140              		.loc 1 253 0
 141 0094 3749     		ldr	r1, .L12+92
 142 0096 8C46     		mov	ip, r1
 143 0098 6244     		add	r2, r2, ip
 144 009a 1360     		str	r3, [r2]
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 8


 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 145              		.loc 1 255 0
 146 009c C307     		lsl	r3, r0, #31
 147 009e 08D5     		bpl	.L4
 148              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 149              		.loc 1 257 0
 150 00a0 2D49     		ldr	r1, .L12+64
 151 00a2 0868     		ldr	r0, [r1]
 152 00a4 8022     		mov	r2, #128
 153              	.LVL10:
 154 00a6 5202     		lsl	r2, r2, #9
 155 00a8 131C     		mov	r3, r2
 156 00aa A340     		lsl	r3, r3, r4
 157 00ac 1B0C     		lsr	r3, r3, #16
 158 00ae 0343     		orr	r3, r0
 159 00b0 0B60     		str	r3, [r1]
 160              	.LVL11:
 161              	.L4:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 162              		.loc 1 260 0
 163 00b2 A300     		lsl	r3, r4, #2
 164 00b4 2E4A     		ldr	r2, .L12+88
 165              	.LVL12:
 166 00b6 9B58     		ldr	r3, [r3, r2]
 167 00b8 9B07     		lsl	r3, r3, #30
 168 00ba 08D5     		bpl	.L5
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 169              		.loc 1 262 0
 170 00bc 2749     		ldr	r1, .L12+68
 171 00be 0868     		ldr	r0, [r1]
 172 00c0 8022     		mov	r2, #128
 173              	.LVL13:
 174 00c2 5202     		lsl	r2, r2, #9
 175 00c4 131C     		mov	r3, r2
 176 00c6 A340     		lsl	r3, r3, r4
 177 00c8 1B0C     		lsr	r3, r3, #16
 178 00ca 0343     		orr	r3, r0
 179 00cc 0B60     		str	r3, [r1]
 180              	.L5:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 9


 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 181              		.loc 1 282 0
 182 00ce A300     		lsl	r3, r4, #2
 183 00d0 274A     		ldr	r2, .L12+88
 184              	.LVL14:
 185 00d2 9B58     		ldr	r3, [r3, r2]
 186 00d4 9A05     		lsl	r2, r3, #22
 187 00d6 02D5     		bpl	.L11
 188              	.LVL15:
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 189              		.loc 1 284 0
 190 00d8 8020     		mov	r0, #128
 191 00da 4000     		lsl	r0, r0, #1
 192 00dc 01E0     		b	.L6
 193              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 194              		.loc 1 288 0
 195 00de 8020     		mov	r0, #128
 196 00e0 4001     		lsl	r0, r0, #5
 197              	.L6:
 198              	.LVL16:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 199              		.loc 1 291 0
 200 00e2 DB05     		lsl	r3, r3, #23
 201 00e4 04D4     		bmi	.L7
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 202              		.loc 1 298 0
 203 00e6 6300     		lsl	r3, r4, #1
 204 00e8 0021     		mov	r1, #0
 205 00ea 234A     		ldr	r2, .L12+96
 206 00ec 9952     		strh	r1, [r3, r2]
 207 00ee 03E0     		b	.L8
 208              	.L7:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 10


 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 209              		.loc 1 307 0
 210 00f0 6300     		lsl	r3, r4, #1
 211 00f2 0021     		mov	r1, #0
 212 00f4 204A     		ldr	r2, .L12+96
 213 00f6 9952     		strh	r1, [r3, r2]
 214              	.L8:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 215              		.loc 1 311 0 discriminator 2
 216 00f8 204B     		ldr	r3, .L12+100
 217 00fa 5843     		mul	r0, r3
 218              	.LVL17:
 219 00fc 204B     		ldr	r3, .L12+104
 220 00fe 9C46     		mov	ip, r3
 221 0100 6044     		add	r0, r0, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 222              		.loc 1 312 0 discriminator 2
 223 0102 2049     		ldr	r1, .L12+108
 224 0104 FFF7FEFF 		bl	__aeabi_idiv
 225              	.LVL18:
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 226              		.loc 1 311 0 discriminator 2
 227 0108 00B2     		sxth	r0, r0
 228 010a A200     		lsl	r2, r4, #2
 229 010c 1E4B     		ldr	r3, .L12+112
 230 010e D050     		str	r0, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 231              		.loc 1 232 0 discriminator 2
 232 0110 0134     		add	r4, r4, #1
 233              	.LVL19:
 234              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 235              		.loc 1 232 0 is_stmt 0 discriminator 1
 236 0112 012C     		cmp	r4, #1
 237 0114 B5D9     		bls	.L9
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 238              		.loc 1 314 0 is_stmt 1
 239              		@ sp needed
 240              	.LVL20:
 241 0116 10BD     		pop	{r4, pc}
 242              	.L13:
 243              		.align	2
 244              	.L12:
 245 0118 00000000 		.word	ADC_ISR
 246 011c 20001A40 		.word	1075445792
 247 0120 80031A40 		.word	1075446656
 248 0124 70201010 		.word	269492336
 249 0128 70200010 		.word	268443760
 250 012c 00001A40 		.word	1075445760
 251 0130 8C000080 		.word	-2147483508
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 11


 252 0134 04001A40 		.word	1075445764
 253 0138 0000FF07 		.word	134152192
 254 013c 18001A40 		.word	1075445784
 255 0140 1C001A40 		.word	1075445788
 256 0144 04000400 		.word	262148
 257 0148 10001A40 		.word	1075445776
 258 014c 14001A40 		.word	1075445780
 259 0150 00031A40 		.word	1075446528
 260 0154 40031A40 		.word	1075446592
 261 0158 28021A40 		.word	1075446312
 262 015c 38021A40 		.word	1075446328
 263 0160 18021A40 		.word	1075446296
 264 0164 000F1A40 		.word	1075449600
 265 0168 30001A40 		.word	1075445808
 266 016c FFFFFFDF 		.word	-536870913
 267 0170 00000000 		.word	.LANCHOR0
 268 0174 80001A40 		.word	1075445888
 269 0178 00000000 		.word	ADC_offset
 270 017c 10270000 		.word	10000
 271 0180 E40C0000 		.word	3300
 272 0184 C8190000 		.word	6600
 273 0188 00000000 		.word	ADC_countsPer10Volt
 274              		.cfi_endproc
 275              	.LFE1:
 276              		.size	ADC_Init, .-ADC_Init
 277              		.section	.text.ADC_Enable,"ax",%progbits
 278              		.align	2
 279              		.global	ADC_Enable
 280              		.code	16
 281              		.thumb_func
 282              		.type	ADC_Enable, %function
 283              	ADC_Enable:
 284              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 285              		.loc 1 331 0
 286              		.cfi_startproc
 287 0000 08B5     		push	{r3, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 12


 291              		.loc 1 332 0
 292 0002 074B     		ldr	r3, .L16
 293 0004 1B68     		ldr	r3, [r3]
 294 0006 002B     		cmp	r3, #0
 295 0008 08DB     		blt	.L14
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 296              		.loc 1 342 0
 297 000a 054A     		ldr	r2, .L16
 298 000c 1368     		ldr	r3, [r2]
 299 000e 8021     		mov	r1, #128
 300 0010 0906     		lsl	r1, r1, #24
 301 0012 0B43     		orr	r3, r1
 302 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 303              		.loc 1 345 0
 304 0016 0A20     		mov	r0, #10
 305 0018 FFF7FEFF 		bl	CyDelayUs
 306              	.LVL21:
 307              	.L14:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 308              		.loc 1 347 0
 309              		@ sp needed
 310 001c 08BD     		pop	{r3, pc}
 311              	.L17:
 312 001e C046     		.align	2
 313              	.L16:
 314 0020 00001A40 		.word	1075445760
 315              		.cfi_endproc
 316              	.LFE2:
 317              		.size	ADC_Enable, .-ADC_Enable
 318              		.section	.text.ADC_Start,"ax",%progbits
 319              		.align	2
 320              		.global	ADC_Start
 321              		.code	16
 322              		.thumb_func
 323              		.type	ADC_Start, %function
 324              	ADC_Start:
 325              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 326              		.loc 1 64 0
 327              		.cfi_startproc
 328 0000 08B5     		push	{r3, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 3, -8
 331              		.cfi_offset 14, -4
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 13


  66:.\Generated_Source\PSoC4/ADC.c ****     {
 332              		.loc 1 66 0
 333 0002 064B     		ldr	r3, .L20
 334 0004 1B78     		ldrb	r3, [r3]
 335 0006 002B     		cmp	r3, #0
 336 0008 04D1     		bne	.L19
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 337              		.loc 1 68 0
 338 000a FFF7FEFF 		bl	ADC_Init
 339              	.LVL22:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 340              		.loc 1 69 0
 341 000e 0122     		mov	r2, #1
 342 0010 024B     		ldr	r3, .L20
 343 0012 1A70     		strb	r2, [r3]
 344              	.L19:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 345              		.loc 1 71 0
 346 0014 FFF7FEFF 		bl	ADC_Enable
 347              	.LVL23:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 348              		.loc 1 72 0
 349              		@ sp needed
 350 0018 08BD     		pop	{r3, pc}
 351              	.L21:
 352 001a C046     		.align	2
 353              	.L20:
 354 001c 00000000 		.word	.LANCHOR1
 355              		.cfi_endproc
 356              	.LFE0:
 357              		.size	ADC_Start, .-ADC_Start
 358              		.section	.text.ADC_Stop,"ax",%progbits
 359              		.align	2
 360              		.global	ADC_Stop
 361              		.code	16
 362              		.thumb_func
 363              		.type	ADC_Stop, %function
 364              	ADC_Stop:
 365              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 14


 366:.\Generated_Source\PSoC4/ADC.c **** {
 366              		.loc 1 366 0
 367              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 368              		.loc 1 367 0
 369 0000 024A     		ldr	r2, .L23
 370 0002 1368     		ldr	r3, [r2]
 371 0004 5B00     		lsl	r3, r3, #1
 372 0006 5B08     		lsr	r3, r3, #1
 373 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 374              		.loc 1 368 0
 375              		@ sp needed
 376 000a 7047     		bx	lr
 377              	.L24:
 378              		.align	2
 379              	.L23:
 380 000c 00001A40 		.word	1075445760
 381              		.cfi_endproc
 382              	.LFE3:
 383              		.size	ADC_Stop, .-ADC_Stop
 384              		.section	.text.ADC_StartConvert,"ax",%progbits
 385              		.align	2
 386              		.global	ADC_StartConvert
 387              		.code	16
 388              		.thumb_func
 389              		.type	ADC_StartConvert, %function
 390              	ADC_StartConvert:
 391              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 392              		.loc 1 392 0
 393              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 15


 394              		.loc 1 394 0
 395 0000 034A     		ldr	r2, .L26
 396 0002 1368     		ldr	r3, [r2]
 397 0004 8021     		mov	r1, #128
 398 0006 4902     		lsl	r1, r1, #9
 399 0008 0B43     		orr	r3, r1
 400 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 401              		.loc 1 399 0
 402              		@ sp needed
 403 000c 7047     		bx	lr
 404              	.L27:
 405 000e C046     		.align	2
 406              	.L26:
 407 0010 04001A40 		.word	1075445764
 408              		.cfi_endproc
 409              	.LFE4:
 410              		.size	ADC_StartConvert, .-ADC_StartConvert
 411              		.section	.text.ADC_StopConvert,"ax",%progbits
 412              		.align	2
 413              		.global	ADC_StopConvert
 414              		.code	16
 415              		.thumb_func
 416              		.type	ADC_StopConvert, %function
 417              	ADC_StopConvert:
 418              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 419              		.loc 1 417 0
 420              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 421              		.loc 1 419 0
 422 0000 024A     		ldr	r2, .L29
 423 0002 1168     		ldr	r1, [r2]
 424 0004 024B     		ldr	r3, .L29+4
 425 0006 0B40     		and	r3, r1
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 16


 426 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 427              		.loc 1 421 0
 428              		@ sp needed
 429 000a 7047     		bx	lr
 430              	.L30:
 431              		.align	2
 432              	.L29:
 433 000c 04001A40 		.word	1075445764
 434 0010 FFFFFEFF 		.word	-65537
 435              		.cfi_endproc
 436              	.LFE5:
 437              		.size	ADC_StopConvert, .-ADC_StopConvert
 438              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 439              		.align	2
 440              		.global	ADC_IsEndConversion
 441              		.code	16
 442              		.thumb_func
 443              		.type	ADC_IsEndConversion, %function
 444              	ADC_IsEndConversion:
 445              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 446              		.loc 1 451 0
 447              		.cfi_startproc
 448              	.LVL24:
 449 0000 021C     		mov	r2, r0
 450              	.LVL25:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 17


 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 451              		.loc 1 454 0
 452 0002 8307     		lsl	r3, r0, #30
 453 0004 0CD0     		beq	.L35
 454              	.LVL26:
 455              	.L34:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 456              		.loc 1 458 0 discriminator 2
 457 0006 074B     		ldr	r3, .L36
 458 0008 1B68     		ldr	r3, [r3]
 459 000a 0120     		mov	r0, #1
 460 000c 1840     		and	r0, r3
 461              	.LVL27:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 462              		.loc 1 459 0 discriminator 2
 463 000e 01D1     		bne	.L33
 464              		.loc 1 459 0 is_stmt 0 discriminator 1
 465 0010 9307     		lsl	r3, r2, #30
 466 0012 F8D4     		bmi	.L34
 467              	.L33:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 468              		.loc 1 461 0 is_stmt 1
 469 0014 0028     		cmp	r0, #0
 470 0016 04D0     		beq	.L32
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 471              		.loc 1 464 0
 472 0018 0122     		mov	r2, #1
 473              	.LVL28:
 474 001a 024B     		ldr	r3, .L36
 475 001c 1A60     		str	r2, [r3]
 476 001e 00E0     		b	.L32
 477              	.LVL29:
 478              	.L35:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 479              		.loc 1 452 0
 480 0020 0020     		mov	r0, #0
 481              	.LVL30:
 482              	.L32:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 18


 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 483              		.loc 1 486 0
 484              		@ sp needed
 485 0022 7047     		bx	lr
 486              	.L37:
 487              		.align	2
 488              	.L36:
 489 0024 10021A40 		.word	1075446288
 490              		.cfi_endproc
 491              	.LFE6:
 492              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 493              		.section	.text.ADC_GetResult16,"ax",%progbits
 494              		.align	2
 495              		.global	ADC_GetResult16
 496              		.code	16
 497              		.thumb_func
 498              		.type	ADC_GetResult16, %function
 499              	ADC_GetResult16:
 500              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 501              		.loc 1 505 0
 502              		.cfi_startproc
 503              	.LVL31:
 504 0000 10B5     		push	{r4, lr}
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
 508 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 19


 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 509              		.loc 1 509 0
 510 0004 012C     		cmp	r4, #1
 511 0006 02D9     		bls	.L39
 512              		.loc 1 509 0 is_stmt 0 discriminator 1
 513 0008 0020     		mov	r0, #0
 514              	.LVL32:
 515 000a FFF7FEFF 		bl	CyHalt
 516              	.LVL33:
 517              	.L39:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 518              		.loc 1 511 0 is_stmt 1
 519 000e 012C     		cmp	r4, #1
 520 0010 07D8     		bhi	.L41
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 521              		.loc 1 513 0
 522 0012 A400     		lsl	r4, r4, #2
 523              	.LVL34:
 524 0014 044B     		ldr	r3, .L42
 525 0016 9C46     		mov	ip, r3
 526 0018 6444     		add	r4, r4, ip
 527 001a 2068     		ldr	r0, [r4]
 528 001c 0004     		lsl	r0, r0, #16
 529 001e 000C     		lsr	r0, r0, #16
 530              	.LVL35:
 531 0020 00E0     		b	.L40
 532              	.LVL36:
 533              	.L41:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 534              		.loc 1 521 0
 535 0022 0020     		mov	r0, #0
 536              	.LVL37:
 537              	.L40:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 538              		.loc 1 525 0
 539 0024 00B2     		sxth	r0, r0
 540              	.LVL38:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 541              		.loc 1 526 0
 542              		@ sp needed
 543 0026 10BD     		pop	{r4, pc}
 544              	.L43:
 545              		.align	2
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 20


 546              	.L42:
 547 0028 80011A40 		.word	1075446144
 548              		.cfi_endproc
 549              	.LFE7:
 550              		.size	ADC_GetResult16, .-ADC_GetResult16
 551              		.section	.text.ADC_SetChanMask,"ax",%progbits
 552              		.align	2
 553              		.global	ADC_SetChanMask
 554              		.code	16
 555              		.thumb_func
 556              		.type	ADC_SetChanMask, %function
 557              	ADC_SetChanMask:
 558              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 559              		.loc 1 550 0
 560              		.cfi_startproc
 561              	.LVL39:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 562              		.loc 1 551 0
 563 0000 0323     		mov	r3, #3
 564 0002 1840     		and	r0, r3
 565              	.LVL40:
 566 0004 014B     		ldr	r3, .L45
 567 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 568              		.loc 1 552 0
 569              		@ sp needed
 570 0008 7047     		bx	lr
 571              	.L46:
 572 000a C046     		.align	2
 573              	.L45:
 574 000c 20001A40 		.word	1075445792
 575              		.cfi_endproc
 576              	.LFE8:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 21


 577              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 578              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 579              		.align	2
 580              		.global	ADC_SetLowLimit
 581              		.code	16
 582              		.thumb_func
 583              		.type	ADC_SetLowLimit, %function
 584              	ADC_SetLowLimit:
 585              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 586              		.loc 1 594 0
 587              		.cfi_startproc
 588              	.LVL41:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 589              		.loc 1 595 0
 590 0000 054A     		ldr	r2, .L48
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 22


 591 0002 1368     		ldr	r3, [r2]
 592 0004 1B0C     		lsr	r3, r3, #16
 593 0006 1B04     		lsl	r3, r3, #16
 594 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 595              		.loc 1 596 0
 596 000a 1368     		ldr	r3, [r2]
 597 000c 0004     		lsl	r0, r0, #16
 598              	.LVL42:
 599 000e 000C     		lsr	r0, r0, #16
 600 0010 1843     		orr	r0, r3
 601 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 602              		.loc 1 597 0
 603              		@ sp needed
 604 0014 7047     		bx	lr
 605              	.L49:
 606 0016 C046     		.align	2
 607              	.L48:
 608 0018 18001A40 		.word	1075445784
 609              		.cfi_endproc
 610              	.LFE9:
 611              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 612              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 613              		.align	2
 614              		.global	ADC_SetHighLimit
 615              		.code	16
 616              		.thumb_func
 617              		.type	ADC_SetHighLimit, %function
 618              	ADC_SetHighLimit:
 619              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 620              		.loc 1 615 0
 621              		.cfi_startproc
 622              	.LVL43:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 623              		.loc 1 616 0
 624 0000 044A     		ldr	r2, .L51
 625 0002 1368     		ldr	r3, [r2]
 626 0004 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 23


 627 0006 1B0C     		lsr	r3, r3, #16
 628 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 629              		.loc 1 617 0
 630 000a 1368     		ldr	r3, [r2]
 631 000c 0004     		lsl	r0, r0, #16
 632              	.LVL44:
 633 000e 1843     		orr	r0, r3
 634 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 635              		.loc 1 618 0
 636              		@ sp needed
 637 0012 7047     		bx	lr
 638              	.L52:
 639              		.align	2
 640              	.L51:
 641 0014 18001A40 		.word	1075445784
 642              		.cfi_endproc
 643              	.LFE10:
 644              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 645              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 646              		.align	2
 647              		.global	ADC_SetLimitMask
 648              		.code	16
 649              		.thumb_func
 650              		.type	ADC_SetLimitMask, %function
 651              	ADC_SetLimitMask:
 652              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 653              		.loc 1 639 0
 654              		.cfi_startproc
 655              	.LVL45:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 656              		.loc 1 640 0
 657 0000 0323     		mov	r3, #3
 658 0002 1840     		and	r0, r3
 659              	.LVL46:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 24


 660 0004 014B     		ldr	r3, .L54
 661 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 662              		.loc 1 641 0
 663              		@ sp needed
 664 0008 7047     		bx	lr
 665              	.L55:
 666 000a C046     		.align	2
 667              	.L54:
 668 000c 38021A40 		.word	1075446328
 669              		.cfi_endproc
 670              	.LFE11:
 671              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 672              		.section	.text.ADC_SetSatMask,"ax",%progbits
 673              		.align	2
 674              		.global	ADC_SetSatMask
 675              		.code	16
 676              		.thumb_func
 677              		.type	ADC_SetSatMask, %function
 678              	ADC_SetSatMask:
 679              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 680              		.loc 1 662 0
 681              		.cfi_startproc
 682              	.LVL47:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 683              		.loc 1 663 0
 684 0000 0323     		mov	r3, #3
 685 0002 1840     		and	r0, r3
 686              	.LVL48:
 687 0004 014B     		ldr	r3, .L57
 688 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 689              		.loc 1 664 0
 690              		@ sp needed
 691 0008 7047     		bx	lr
 692              	.L58:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 25


 693 000a C046     		.align	2
 694              	.L57:
 695 000c 28021A40 		.word	1075446312
 696              		.cfi_endproc
 697              	.LFE12:
 698              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 699              		.section	.text.ADC_SetOffset,"ax",%progbits
 700              		.align	2
 701              		.global	ADC_SetOffset
 702              		.code	16
 703              		.thumb_func
 704              		.type	ADC_SetOffset, %function
 705              	ADC_SetOffset:
 706              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 707              		.loc 1 690 0
 708              		.cfi_startproc
 709              	.LVL49:
 710 0000 38B5     		push	{r3, r4, r5, lr}
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 3, -16
 713              		.cfi_offset 4, -12
 714              		.cfi_offset 5, -8
 715              		.cfi_offset 14, -4
 716 0002 041C     		mov	r4, r0
 717 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 718              		.loc 1 692 0
 719 0006 0128     		cmp	r0, #1
 720 0008 02D9     		bls	.L60
 721              		.loc 1 692 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 26


 722 000a 0020     		mov	r0, #0
 723              	.LVL50:
 724 000c FFF7FEFF 		bl	CyHalt
 725              	.LVL51:
 726              	.L60:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 727              		.loc 1 694 0 is_stmt 1
 728 0010 6400     		lsl	r4, r4, #1
 729              	.LVL52:
 730 0012 014B     		ldr	r3, .L61
 731 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 732              		.loc 1 695 0
 733              		@ sp needed
 734 0016 38BD     		pop	{r3, r4, r5, pc}
 735              	.L62:
 736              		.align	2
 737              	.L61:
 738 0018 00000000 		.word	ADC_offset
 739              		.cfi_endproc
 740              	.LFE13:
 741              		.size	ADC_SetOffset, .-ADC_SetOffset
 742              		.section	.text.ADC_SetGain,"ax",%progbits
 743              		.align	2
 744              		.global	ADC_SetGain
 745              		.code	16
 746              		.thumb_func
 747              		.type	ADC_SetGain, %function
 748              	ADC_SetGain:
 749              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 27


 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 750              		.loc 1 724 0
 751              		.cfi_startproc
 752              	.LVL53:
 753 0000 38B5     		push	{r3, r4, r5, lr}
 754              		.cfi_def_cfa_offset 16
 755              		.cfi_offset 3, -16
 756              		.cfi_offset 4, -12
 757              		.cfi_offset 5, -8
 758              		.cfi_offset 14, -4
 759 0002 041C     		mov	r4, r0
 760 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 761              		.loc 1 726 0
 762 0006 0128     		cmp	r0, #1
 763 0008 02D9     		bls	.L64
 764              		.loc 1 726 0 is_stmt 0 discriminator 1
 765 000a 0020     		mov	r0, #0
 766              	.LVL54:
 767 000c FFF7FEFF 		bl	CyHalt
 768              	.LVL55:
 769              	.L64:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 770              		.loc 1 728 0 is_stmt 1
 771 0010 A400     		lsl	r4, r4, #2
 772              	.LVL56:
 773 0012 014B     		ldr	r3, .L65
 774 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 775              		.loc 1 729 0
 776              		@ sp needed
 777              	.LVL57:
 778 0016 38BD     		pop	{r3, r4, r5, pc}
 779              	.L66:
 780              		.align	2
 781              	.L65:
 782 0018 00000000 		.word	ADC_countsPer10Volt
 783              		.cfi_endproc
 784              	.LFE14:
 785              		.size	ADC_SetGain, .-ADC_SetGain
 786              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_CountsTo_mVolts
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_CountsTo_mVolts, %function
 792              	ADC_CountsTo_mVolts:
 793              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 28


 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 794              		.loc 1 757 0
 795              		.cfi_startproc
 796              	.LVL58:
 797 0000 38B5     		push	{r3, r4, r5, lr}
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 3, -16
 800              		.cfi_offset 4, -12
 801              		.cfi_offset 5, -8
 802              		.cfi_offset 14, -4
 803 0002 041C     		mov	r4, r0
 804 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 805              		.loc 1 761 0
 806 0006 0128     		cmp	r0, #1
 807 0008 02D9     		bls	.L68
 808              		.loc 1 761 0 is_stmt 0 discriminator 1
 809 000a 0020     		mov	r0, #0
 810              	.LVL59:
 811 000c FFF7FEFF 		bl	CyHalt
 812              	.LVL60:
 813              	.L68:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 29


 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 814              		.loc 1 772 0 is_stmt 1
 815 0010 6300     		lsl	r3, r4, #1
 816 0012 0F4A     		ldr	r2, .L71
 817 0014 995A     		ldrh	r1, [r3, r2]
 818 0016 691A     		sub	r1, r5, r1
 819 0018 09B2     		sxth	r1, r1
 820              	.LVL61:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 821              		.loc 1 774 0
 822 001a 0E48     		ldr	r0, .L71+4
 823 001c 021C     		mov	r2, r0
 824 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 825              		.loc 1 775 0
 826 0020 0029     		cmp	r1, #0
 827 0022 06DD     		ble	.L69
 828              		.loc 1 775 0 is_stmt 0 discriminator 1
 829 0024 A300     		lsl	r3, r4, #2
 830 0026 0C49     		ldr	r1, .L71+8
 831              	.LVL62:
 832 0028 5B58     		ldr	r3, [r3, r1]
 833 002a D80F     		lsr	r0, r3, #31
 834 002c C018     		add	r0, r0, r3
 835 002e 4310     		asr	r3, r0, #1
 836 0030 06E0     		b	.L70
 837              	.LVL63:
 838              	.L69:
 839              		.loc 1 775 0 discriminator 2
 840 0032 A300     		lsl	r3, r4, #2
 841 0034 0849     		ldr	r1, .L71+8
 842              	.LVL64:
 843 0036 5B58     		ldr	r3, [r3, r1]
 844 0038 D80F     		lsr	r0, r3, #31
 845 003a C318     		add	r3, r0, r3
 846 003c 5B10     		asr	r3, r3, #1
 847 003e 5B42     		neg	r3, r3
 848              	.L70:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 849              		.loc 1 774 0 is_stmt 1
 850 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 851              		.loc 1 776 0
 852 0042 A400     		lsl	r4, r4, #2
 853              	.LVL65:
 854 0044 044B     		ldr	r3, .L71+8
 855 0046 E158     		ldr	r1, [r4, r3]
 856 0048 FFF7FEFF 		bl	__aeabi_idiv
 857              	.LVL66:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 858              		.loc 1 778 0
 859 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 860              		.loc 1 779 0
 861              		@ sp needed
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 30


 862 004e 38BD     		pop	{r3, r4, r5, pc}
 863              	.L72:
 864              		.align	2
 865              	.L71:
 866 0050 00000000 		.word	ADC_offset
 867 0054 10270000 		.word	10000
 868 0058 00000000 		.word	ADC_countsPer10Volt
 869              		.cfi_endproc
 870              	.LFE15:
 871              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 872              		.global	__aeabi_lmul
 873              		.global	__aeabi_ldivmod
 874              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 875              		.align	2
 876              		.global	ADC_CountsTo_uVolts
 877              		.code	16
 878              		.thumb_func
 879              		.type	ADC_CountsTo_uVolts, %function
 880              	ADC_CountsTo_uVolts:
 881              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 882              		.loc 1 811 0
 883              		.cfi_startproc
 884              	.LVL67:
 885 0000 38B5     		push	{r3, r4, r5, lr}
 886              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 31


 887              		.cfi_offset 3, -16
 888              		.cfi_offset 4, -12
 889              		.cfi_offset 5, -8
 890              		.cfi_offset 14, -4
 891 0002 051C     		mov	r5, r0
 892 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 893              		.loc 1 815 0
 894 0006 0128     		cmp	r0, #1
 895 0008 02D9     		bls	.L74
 896              		.loc 1 815 0 is_stmt 0 discriminator 1
 897 000a 0020     		mov	r0, #0
 898              	.LVL68:
 899 000c FFF7FEFF 		bl	CyHalt
 900              	.LVL69:
 901              	.L74:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 902              		.loc 1 826 0 is_stmt 1
 903 0010 6A00     		lsl	r2, r5, #1
 904 0012 084B     		ldr	r3, .L75
 905 0014 D05A     		ldrh	r0, [r2, r3]
 906 0016 201A     		sub	r0, r4, r0
 907 0018 00B2     		sxth	r0, r0
 908              	.LVL70:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 909              		.loc 1 828 0
 910 001a C117     		asr	r1, r0, #31
 911 001c 064A     		ldr	r2, .L75+4
 912 001e 0023     		mov	r3, #0
 913 0020 FFF7FEFF 		bl	__aeabi_lmul
 914              	.LVL71:
 915 0024 AD00     		lsl	r5, r5, #2
 916              	.LVL72:
 917 0026 054B     		ldr	r3, .L75+8
 918 0028 EA58     		ldr	r2, [r5, r3]
 919 002a D317     		asr	r3, r2, #31
 920 002c FFF7FEFF 		bl	__aeabi_ldivmod
 921              	.LVL73:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 922              		.loc 1 831 0
 923              		@ sp needed
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 32


 924 0030 38BD     		pop	{r3, r4, r5, pc}
 925              	.L76:
 926 0032 C046     		.align	2
 927              	.L75:
 928 0034 00000000 		.word	ADC_offset
 929 0038 80969800 		.word	10000000
 930 003c 00000000 		.word	ADC_countsPer10Volt
 931              		.cfi_endproc
 932              	.LFE16:
 933              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 934              		.global	__aeabi_i2f
 935              		.global	__aeabi_fmul
 936              		.global	__aeabi_fdiv
 937              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 938              		.align	2
 939              		.global	ADC_CountsTo_Volts
 940              		.code	16
 941              		.thumb_func
 942              		.type	ADC_CountsTo_Volts, %function
 943              	ADC_CountsTo_Volts:
 944              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 945              		.loc 1 856 0
 946              		.cfi_startproc
 947              	.LVL74:
 948 0000 38B5     		push	{r3, r4, r5, lr}
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 3, -16
 951              		.cfi_offset 4, -12
 952              		.cfi_offset 5, -8
 953              		.cfi_offset 14, -4
 954 0002 041C     		mov	r4, r0
 955 0004 0D1C     		mov	r5, r1
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 33


 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 956              		.loc 1 860 0
 957 0006 0128     		cmp	r0, #1
 958 0008 02D9     		bls	.L78
 959              		.loc 1 860 0 is_stmt 0 discriminator 1
 960 000a 0020     		mov	r0, #0
 961              	.LVL75:
 962 000c FFF7FEFF 		bl	CyHalt
 963              	.LVL76:
 964              	.L78:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 965              		.loc 1 871 0 is_stmt 1
 966 0010 6200     		lsl	r2, r4, #1
 967 0012 0A4B     		ldr	r3, .L79
 968 0014 D05A     		ldrh	r0, [r2, r3]
 969 0016 281A     		sub	r0, r5, r0
 970 0018 00B2     		sxth	r0, r0
 971              	.LVL77:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 972              		.loc 1 873 0
 973 001a FFF7FEFF 		bl	__aeabi_i2f
 974              	.LVL78:
 975 001e 0849     		ldr	r1, .L79+4
 976 0020 FFF7FEFF 		bl	__aeabi_fmul
 977              	.LVL79:
 978 0024 051C     		add	r5, r0, #0
 979 0026 A400     		lsl	r4, r4, #2
 980              	.LVL80:
 981 0028 064B     		ldr	r3, .L79+8
 982 002a E058     		ldr	r0, [r4, r3]
 983 002c FFF7FEFF 		bl	__aeabi_i2f
 984              	.LVL81:
 985 0030 011C     		add	r1, r0, #0
 986 0032 281C     		add	r0, r5, #0
 987 0034 FFF7FEFF 		bl	__aeabi_fdiv
 988              	.LVL82:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 989              		.loc 1 876 0
 990              		@ sp needed
 991 0038 38BD     		pop	{r3, r4, r5, pc}
 992              	.L80:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 34


 993 003a C046     		.align	2
 994              	.L79:
 995 003c 00000000 		.word	ADC_offset
 996 0040 00002041 		.word	1092616192
 997 0044 00000000 		.word	ADC_countsPer10Volt
 998              		.cfi_endproc
 999              	.LFE17:
 1000              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1001              		.comm	ADC_countsPer10Volt,8,4
 1002              		.comm	ADC_offset,4,4
 1003              		.global	ADC_initVar
 1004              		.section	.rodata
 1005              		.align	2
 1006              		.set	.LANCHOR0,. + 0
 1007              		.type	ADC_channelsConfig, %object
 1008              		.size	ADC_channelsConfig, 8
 1009              	ADC_channelsConfig:
 1010 0000 00000000 		.space	8
 1010      00000000 
 1011              		.type	ADC_InputsPlacement.4742, %object
 1012              		.size	ADC_InputsPlacement.4742, 2
 1013              	ADC_InputsPlacement.4742:
 1014 0008 05       		.byte	5
 1015 0009 00       		.byte	0
 1016 000a 0000     		.bss
 1017              		.set	.LANCHOR1,. + 0
 1018              		.type	ADC_initVar, %object
 1019              		.size	ADC_initVar, 1
 1020              	ADC_initVar:
 1021 0000 00       		.space	1
 1022              		.text
 1023              	.Letext0:
 1024              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1025              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1026              		.section	.debug_info,"",%progbits
 1027              	.Ldebug_info0:
 1028 0000 BB050000 		.4byte	0x5bb
 1029 0004 0400     		.2byte	0x4
 1030 0006 00000000 		.4byte	.Ldebug_abbrev0
 1031 000a 04       		.byte	0x4
 1032 000b 01       		.uleb128 0x1
 1033 000c DB010000 		.4byte	.LASF62
 1034 0010 01       		.byte	0x1
 1035 0011 D7020000 		.4byte	.LASF63
 1036 0015 63030000 		.4byte	.LASF64
 1037 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1038 001d 00000000 		.4byte	0
 1039 0021 00000000 		.4byte	.Ldebug_line0
 1040 0025 02       		.uleb128 0x2
 1041 0026 01       		.byte	0x1
 1042 0027 06       		.byte	0x6
 1043 0028 7C000000 		.4byte	.LASF0
 1044 002c 02       		.uleb128 0x2
 1045 002d 01       		.byte	0x1
 1046 002e 08       		.byte	0x8
 1047 002f F6020000 		.4byte	.LASF1
 1048 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 35


 1049 0034 02       		.byte	0x2
 1050 0035 05       		.byte	0x5
 1051 0036 0F030000 		.4byte	.LASF2
 1052 003a 02       		.uleb128 0x2
 1053 003b 02       		.byte	0x2
 1054 003c 07       		.byte	0x7
 1055 003d 5D010000 		.4byte	.LASF3
 1056 0041 02       		.uleb128 0x2
 1057 0042 04       		.byte	0x4
 1058 0043 05       		.byte	0x5
 1059 0044 9F000000 		.4byte	.LASF4
 1060 0048 02       		.uleb128 0x2
 1061 0049 04       		.byte	0x4
 1062 004a 07       		.byte	0x7
 1063 004b 2C010000 		.4byte	.LASF5
 1064 004f 02       		.uleb128 0x2
 1065 0050 08       		.byte	0x8
 1066 0051 05       		.byte	0x5
 1067 0052 6E000000 		.4byte	.LASF6
 1068 0056 02       		.uleb128 0x2
 1069 0057 08       		.byte	0x8
 1070 0058 07       		.byte	0x7
 1071 0059 32000000 		.4byte	.LASF7
 1072 005d 03       		.uleb128 0x3
 1073 005e 04       		.byte	0x4
 1074 005f 05       		.byte	0x5
 1075 0060 696E7400 		.ascii	"int\000"
 1076 0064 02       		.uleb128 0x2
 1077 0065 04       		.byte	0x4
 1078 0066 07       		.byte	0x7
 1079 0067 18010000 		.4byte	.LASF8
 1080 006b 04       		.uleb128 0x4
 1081 006c D0000000 		.4byte	.LASF9
 1082 0070 02       		.byte	0x2
 1083 0071 3801     		.2byte	0x138
 1084 0073 2C000000 		.4byte	0x2c
 1085 0077 04       		.uleb128 0x4
 1086 0078 00000000 		.4byte	.LASF10
 1087 007c 02       		.byte	0x2
 1088 007d 3901     		.2byte	0x139
 1089 007f 3A000000 		.4byte	0x3a
 1090 0083 04       		.uleb128 0x4
 1091 0084 E7000000 		.4byte	.LASF11
 1092 0088 02       		.byte	0x2
 1093 0089 3A01     		.2byte	0x13a
 1094 008b 48000000 		.4byte	0x48
 1095 008f 04       		.uleb128 0x4
 1096 0090 D5030000 		.4byte	.LASF12
 1097 0094 02       		.byte	0x2
 1098 0095 3C01     		.2byte	0x13c
 1099 0097 33000000 		.4byte	0x33
 1100 009b 04       		.uleb128 0x4
 1101 009c 8F000000 		.4byte	.LASF13
 1102 00a0 02       		.byte	0x2
 1103 00a1 3D01     		.2byte	0x13d
 1104 00a3 41000000 		.4byte	0x41
 1105 00a7 04       		.uleb128 0x4
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 36


 1106 00a8 9C010000 		.4byte	.LASF14
 1107 00ac 02       		.byte	0x2
 1108 00ad 3E01     		.2byte	0x13e
 1109 00af B3000000 		.4byte	0xb3
 1110 00b3 02       		.uleb128 0x2
 1111 00b4 04       		.byte	0x4
 1112 00b5 04       		.byte	0x4
 1113 00b6 9C020000 		.4byte	.LASF15
 1114 00ba 02       		.uleb128 0x2
 1115 00bb 08       		.byte	0x8
 1116 00bc 04       		.byte	0x4
 1117 00bd E0000000 		.4byte	.LASF16
 1118 00c1 04       		.uleb128 0x4
 1119 00c2 69020000 		.4byte	.LASF17
 1120 00c6 02       		.byte	0x2
 1121 00c7 4301     		.2byte	0x143
 1122 00c9 4F000000 		.4byte	0x4f
 1123 00cd 02       		.uleb128 0x2
 1124 00ce 01       		.byte	0x1
 1125 00cf 08       		.byte	0x8
 1126 00d0 2D030000 		.4byte	.LASF18
 1127 00d4 04       		.uleb128 0x4
 1128 00d5 96010000 		.4byte	.LASF19
 1129 00d9 02       		.byte	0x2
 1130 00da E401     		.2byte	0x1e4
 1131 00dc E0000000 		.4byte	0xe0
 1132 00e0 05       		.uleb128 0x5
 1133 00e1 83000000 		.4byte	0x83
 1134 00e5 04       		.uleb128 0x4
 1135 00e6 32030000 		.4byte	.LASF20
 1136 00ea 02       		.byte	0x2
 1137 00eb F401     		.2byte	0x1f4
 1138 00ed F1000000 		.4byte	0xf1
 1139 00f1 06       		.uleb128 0x6
 1140 00f2 04       		.byte	0x4
 1141 00f3 F7000000 		.4byte	0xf7
 1142 00f7 07       		.uleb128 0x7
 1143 00f8 02       		.uleb128 0x2
 1144 00f9 04       		.byte	0x4
 1145 00fa 07       		.byte	0x7
 1146 00fb A4010000 		.4byte	.LASF21
 1147 00ff 08       		.uleb128 0x8
 1148 0100 29000000 		.4byte	.LASF26
 1149 0104 01       		.byte	0x1
 1150 0105 5E       		.byte	0x5e
 1151 0106 00000000 		.4byte	.LFB1
 1152 010a 8C010000 		.4byte	.LFE1-.LFB1
 1153 010e 01       		.uleb128 0x1
 1154 010f 9C       		.byte	0x9c
 1155 0110 7A010000 		.4byte	0x17a
 1156 0114 09       		.uleb128 0x9
 1157 0115 22030000 		.4byte	.LASF22
 1158 0119 01       		.byte	0x1
 1159 011a 60       		.byte	0x60
 1160 011b 83000000 		.4byte	0x83
 1161 011f 00000000 		.4byte	.LLST0
 1162 0123 09       		.uleb128 0x9
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 37


 1163 0124 53010000 		.4byte	.LASF23
 1164 0128 01       		.byte	0x1
 1165 0129 61       		.byte	0x61
 1166 012a 83000000 		.4byte	0x83
 1167 012e 1F000000 		.4byte	.LLST1
 1168 0132 09       		.uleb128 0x9
 1169 0133 0F000000 		.4byte	.LASF24
 1170 0137 01       		.byte	0x1
 1171 0138 62       		.byte	0x62
 1172 0139 9B000000 		.4byte	0x9b
 1173 013d 30010000 		.4byte	.LLST2
 1174 0141 0A       		.uleb128 0xa
 1175 0142 49000000 		.4byte	.LASF25
 1176 0146 01       		.byte	0x1
 1177 0147 65       		.byte	0x65
 1178 0148 8A010000 		.4byte	0x18a
 1179 014c 05       		.uleb128 0x5
 1180 014d 03       		.byte	0x3
 1181 014e 08000000 		.4byte	ADC_InputsPlacement.4742
 1182 0152 0B       		.uleb128 0xb
 1183 0153 0A000000 		.4byte	.LVL0
 1184 0157 70050000 		.4byte	0x570
 1185 015b 6A010000 		.4byte	0x16a
 1186 015f 0C       		.uleb128 0xc
 1187 0160 01       		.uleb128 0x1
 1188 0161 51       		.byte	0x51
 1189 0162 01       		.uleb128 0x1
 1190 0163 33       		.byte	0x33
 1191 0164 0C       		.uleb128 0xc
 1192 0165 01       		.uleb128 0x1
 1193 0166 50       		.byte	0x50
 1194 0167 01       		.uleb128 0x1
 1195 0168 3E       		.byte	0x3e
 1196 0169 00       		.byte	0
 1197 016a 0D       		.uleb128 0xd
 1198 016b 12000000 		.4byte	.LVL1
 1199 016f 86050000 		.4byte	0x586
 1200 0173 0C       		.uleb128 0xc
 1201 0174 01       		.uleb128 0x1
 1202 0175 50       		.byte	0x50
 1203 0176 01       		.uleb128 0x1
 1204 0177 3E       		.byte	0x3e
 1205 0178 00       		.byte	0
 1206 0179 00       		.byte	0
 1207 017a 0E       		.uleb128 0xe
 1208 017b 6B000000 		.4byte	0x6b
 1209 017f 8A010000 		.4byte	0x18a
 1210 0183 0F       		.uleb128 0xf
 1211 0184 F8000000 		.4byte	0xf8
 1212 0188 01       		.byte	0x1
 1213 0189 00       		.byte	0
 1214 018a 10       		.uleb128 0x10
 1215 018b 7A010000 		.4byte	0x17a
 1216 018f 11       		.uleb128 0x11
 1217 0190 CA030000 		.4byte	.LASF27
 1218 0194 01       		.byte	0x1
 1219 0195 4A01     		.2byte	0x14a
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 38


 1220 0197 00000000 		.4byte	.LFB2
 1221 019b 24000000 		.4byte	.LFE2-.LFB2
 1222 019f 01       		.uleb128 0x1
 1223 01a0 9C       		.byte	0x9c
 1224 01a1 B5010000 		.4byte	0x1b5
 1225 01a5 0D       		.uleb128 0xd
 1226 01a6 1C000000 		.4byte	.LVL21
 1227 01aa A0050000 		.4byte	0x5a0
 1228 01ae 0C       		.uleb128 0xc
 1229 01af 01       		.uleb128 0x1
 1230 01b0 50       		.byte	0x50
 1231 01b1 01       		.uleb128 0x1
 1232 01b2 3A       		.byte	0x3a
 1233 01b3 00       		.byte	0
 1234 01b4 00       		.byte	0
 1235 01b5 12       		.uleb128 0x12
 1236 01b6 95000000 		.4byte	.LASF28
 1237 01ba 01       		.byte	0x1
 1238 01bb 3F       		.byte	0x3f
 1239 01bc 00000000 		.4byte	.LFB0
 1240 01c0 20000000 		.4byte	.LFE0-.LFB0
 1241 01c4 01       		.uleb128 0x1
 1242 01c5 9C       		.byte	0x9c
 1243 01c6 DD010000 		.4byte	0x1dd
 1244 01ca 13       		.uleb128 0x13
 1245 01cb 0E000000 		.4byte	.LVL22
 1246 01cf FF000000 		.4byte	0xff
 1247 01d3 13       		.uleb128 0x13
 1248 01d4 18000000 		.4byte	.LVL23
 1249 01d8 8F010000 		.4byte	0x18f
 1250 01dc 00       		.byte	0
 1251 01dd 14       		.uleb128 0x14
 1252 01de 19030000 		.4byte	.LASF29
 1253 01e2 01       		.byte	0x1
 1254 01e3 6D01     		.2byte	0x16d
 1255 01e5 00000000 		.4byte	.LFB3
 1256 01e9 10000000 		.4byte	.LFE3-.LFB3
 1257 01ed 01       		.uleb128 0x1
 1258 01ee 9C       		.byte	0x9c
 1259 01ef 14       		.uleb128 0x14
 1260 01f0 5D000000 		.4byte	.LASF30
 1261 01f4 01       		.byte	0x1
 1262 01f5 8701     		.2byte	0x187
 1263 01f7 00000000 		.4byte	.LFB4
 1264 01fb 14000000 		.4byte	.LFE4-.LFB4
 1265 01ff 01       		.uleb128 0x1
 1266 0200 9C       		.byte	0x9c
 1267 0201 14       		.uleb128 0x14
 1268 0202 7F010000 		.4byte	.LASF31
 1269 0206 01       		.byte	0x1
 1270 0207 A001     		.2byte	0x1a0
 1271 0209 00000000 		.4byte	.LFB5
 1272 020d 14000000 		.4byte	.LFE5-.LFB5
 1273 0211 01       		.uleb128 0x1
 1274 0212 9C       		.byte	0x9c
 1275 0213 15       		.uleb128 0x15
 1276 0214 C7010000 		.4byte	.LASF33
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 39


 1277 0218 01       		.byte	0x1
 1278 0219 C201     		.2byte	0x1c2
 1279 021b 83000000 		.4byte	0x83
 1280 021f 00000000 		.4byte	.LFB6
 1281 0223 28000000 		.4byte	.LFE6-.LFB6
 1282 0227 01       		.uleb128 0x1
 1283 0228 9C       		.byte	0x9c
 1284 0229 4E020000 		.4byte	0x24e
 1285 022d 16       		.uleb128 0x16
 1286 022e FF000000 		.4byte	.LASF35
 1287 0232 01       		.byte	0x1
 1288 0233 C201     		.2byte	0x1c2
 1289 0235 83000000 		.4byte	0x83
 1290 0239 43010000 		.4byte	.LLST3
 1291 023d 17       		.uleb128 0x17
 1292 023e 88000000 		.4byte	.LASF32
 1293 0242 01       		.byte	0x1
 1294 0243 C401     		.2byte	0x1c4
 1295 0245 83000000 		.4byte	0x83
 1296 0249 88010000 		.4byte	.LLST4
 1297 024d 00       		.byte	0
 1298 024e 15       		.uleb128 0x15
 1299 024f F0030000 		.4byte	.LASF34
 1300 0253 01       		.byte	0x1
 1301 0254 F801     		.2byte	0x1f8
 1302 0256 8F000000 		.4byte	0x8f
 1303 025a 00000000 		.4byte	.LFB7
 1304 025e 2C000000 		.4byte	.LFE7-.LFB7
 1305 0262 01       		.uleb128 0x1
 1306 0263 9C       		.byte	0x9c
 1307 0264 98020000 		.4byte	0x298
 1308 0268 16       		.uleb128 0x16
 1309 0269 28030000 		.4byte	.LASF36
 1310 026d 01       		.byte	0x1
 1311 026e F801     		.2byte	0x1f8
 1312 0270 83000000 		.4byte	0x83
 1313 0274 BE010000 		.4byte	.LLST5
 1314 0278 17       		.uleb128 0x17
 1315 0279 E9030000 		.4byte	.LASF37
 1316 027d 01       		.byte	0x1
 1317 027e FA01     		.2byte	0x1fa
 1318 0280 83000000 		.4byte	0x83
 1319 0284 03020000 		.4byte	.LLST6
 1320 0288 0D       		.uleb128 0xd
 1321 0289 0E000000 		.4byte	.LVL33
 1322 028d B1050000 		.4byte	0x5b1
 1323 0291 0C       		.uleb128 0xc
 1324 0292 01       		.uleb128 0x1
 1325 0293 50       		.byte	0x50
 1326 0294 01       		.uleb128 0x1
 1327 0295 30       		.byte	0x30
 1328 0296 00       		.byte	0
 1329 0297 00       		.byte	0
 1330 0298 11       		.uleb128 0x11
 1331 0299 80020000 		.4byte	.LASF38
 1332 029d 01       		.byte	0x1
 1333 029e 2502     		.2byte	0x225
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 40


 1334 02a0 00000000 		.4byte	.LFB8
 1335 02a4 10000000 		.4byte	.LFE8-.LFB8
 1336 02a8 01       		.uleb128 0x1
 1337 02a9 9C       		.byte	0x9c
 1338 02aa BF020000 		.4byte	0x2bf
 1339 02ae 16       		.uleb128 0x16
 1340 02af EE000000 		.4byte	.LASF39
 1341 02b3 01       		.byte	0x1
 1342 02b4 2502     		.2byte	0x225
 1343 02b6 83000000 		.4byte	0x83
 1344 02ba 21020000 		.4byte	.LLST7
 1345 02be 00       		.byte	0
 1346 02bf 11       		.uleb128 0x11
 1347 02c0 C0020000 		.4byte	.LASF40
 1348 02c4 01       		.byte	0x1
 1349 02c5 5102     		.2byte	0x251
 1350 02c7 00000000 		.4byte	.LFB9
 1351 02cb 1C000000 		.4byte	.LFE9-.LFB9
 1352 02cf 01       		.uleb128 0x1
 1353 02d0 9C       		.byte	0x9c
 1354 02d1 E6020000 		.4byte	0x2e6
 1355 02d5 16       		.uleb128 0x16
 1356 02d6 AD010000 		.4byte	.LASF41
 1357 02da 01       		.byte	0x1
 1358 02db 5102     		.2byte	0x251
 1359 02dd 83000000 		.4byte	0x83
 1360 02e1 42020000 		.4byte	.LLST8
 1361 02e5 00       		.byte	0
 1362 02e6 11       		.uleb128 0x11
 1363 02e7 B6010000 		.4byte	.LASF42
 1364 02eb 01       		.byte	0x1
 1365 02ec 6602     		.2byte	0x266
 1366 02ee 00000000 		.4byte	.LFB10
 1367 02f2 18000000 		.4byte	.LFE10-.LFB10
 1368 02f6 01       		.uleb128 0x1
 1369 02f7 9C       		.byte	0x9c
 1370 02f8 0D030000 		.4byte	0x30d
 1371 02fc 16       		.uleb128 0x16
 1372 02fd A2020000 		.4byte	.LASF43
 1373 0301 01       		.byte	0x1
 1374 0302 6602     		.2byte	0x266
 1375 0304 83000000 		.4byte	0x83
 1376 0308 63020000 		.4byte	.LLST9
 1377 030c 00       		.byte	0
 1378 030d 11       		.uleb128 0x11
 1379 030e 07010000 		.4byte	.LASF44
 1380 0312 01       		.byte	0x1
 1381 0313 7E02     		.2byte	0x27e
 1382 0315 00000000 		.4byte	.LFB11
 1383 0319 10000000 		.4byte	.LFE11-.LFB11
 1384 031d 01       		.uleb128 0x1
 1385 031e 9C       		.byte	0x9c
 1386 031f 34030000 		.4byte	0x334
 1387 0323 16       		.uleb128 0x16
 1388 0324 EE000000 		.4byte	.LASF39
 1389 0328 01       		.byte	0x1
 1390 0329 7E02     		.2byte	0x27e
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 41


 1391 032b 83000000 		.4byte	0x83
 1392 032f 84020000 		.4byte	.LLST10
 1393 0333 00       		.byte	0
 1394 0334 11       		.uleb128 0x11
 1395 0335 3E010000 		.4byte	.LASF45
 1396 0339 01       		.byte	0x1
 1397 033a 9502     		.2byte	0x295
 1398 033c 00000000 		.4byte	.LFB12
 1399 0340 10000000 		.4byte	.LFE12-.LFB12
 1400 0344 01       		.uleb128 0x1
 1401 0345 9C       		.byte	0x9c
 1402 0346 5B030000 		.4byte	0x35b
 1403 034a 16       		.uleb128 0x16
 1404 034b EE000000 		.4byte	.LASF39
 1405 034f 01       		.byte	0x1
 1406 0350 9502     		.2byte	0x295
 1407 0352 83000000 		.4byte	0x83
 1408 0356 A5020000 		.4byte	.LLST11
 1409 035a 00       		.byte	0
 1410 035b 11       		.uleb128 0x11
 1411 035c DB030000 		.4byte	.LASF46
 1412 0360 01       		.byte	0x1
 1413 0361 B102     		.2byte	0x2b1
 1414 0363 00000000 		.4byte	.LFB13
 1415 0367 1C000000 		.4byte	.LFE13-.LFB13
 1416 036b 01       		.uleb128 0x1
 1417 036c 9C       		.byte	0x9c
 1418 036d A1030000 		.4byte	0x3a1
 1419 0371 16       		.uleb128 0x16
 1420 0372 28030000 		.4byte	.LASF36
 1421 0376 01       		.byte	0x1
 1422 0377 B102     		.2byte	0x2b1
 1423 0379 83000000 		.4byte	0x83
 1424 037d C6020000 		.4byte	.LLST12
 1425 0381 16       		.uleb128 0x16
 1426 0382 52030000 		.4byte	.LASF47
 1427 0386 01       		.byte	0x1
 1428 0387 B102     		.2byte	0x2b1
 1429 0389 8F000000 		.4byte	0x8f
 1430 038d F2020000 		.4byte	.LLST13
 1431 0391 0D       		.uleb128 0xd
 1432 0392 10000000 		.4byte	.LVL51
 1433 0396 B1050000 		.4byte	0x5b1
 1434 039a 0C       		.uleb128 0xc
 1435 039b 01       		.uleb128 0x1
 1436 039c 50       		.byte	0x50
 1437 039d 01       		.uleb128 0x1
 1438 039e 30       		.byte	0x30
 1439 039f 00       		.byte	0
 1440 03a0 00       		.byte	0
 1441 03a1 11       		.uleb128 0x11
 1442 03a2 90020000 		.4byte	.LASF48
 1443 03a6 01       		.byte	0x1
 1444 03a7 D302     		.2byte	0x2d3
 1445 03a9 00000000 		.4byte	.LFB14
 1446 03ad 1C000000 		.4byte	.LFE14-.LFB14
 1447 03b1 01       		.uleb128 0x1
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 42


 1448 03b2 9C       		.byte	0x9c
 1449 03b3 E7030000 		.4byte	0x3e7
 1450 03b7 16       		.uleb128 0x16
 1451 03b8 28030000 		.4byte	.LASF36
 1452 03bc 01       		.byte	0x1
 1453 03bd D302     		.2byte	0x2d3
 1454 03bf 83000000 		.4byte	0x83
 1455 03c3 13030000 		.4byte	.LLST14
 1456 03c7 16       		.uleb128 0x16
 1457 03c8 07000000 		.4byte	.LASF49
 1458 03cc 01       		.byte	0x1
 1459 03cd D302     		.2byte	0x2d3
 1460 03cf 9B000000 		.4byte	0x9b
 1461 03d3 3F030000 		.4byte	.LLST15
 1462 03d7 0D       		.uleb128 0xd
 1463 03d8 10000000 		.4byte	.LVL55
 1464 03dc B1050000 		.4byte	0x5b1
 1465 03e0 0C       		.uleb128 0xc
 1466 03e1 01       		.uleb128 0x1
 1467 03e2 50       		.byte	0x50
 1468 03e3 01       		.uleb128 0x1
 1469 03e4 30       		.byte	0x30
 1470 03e5 00       		.byte	0
 1471 03e6 00       		.byte	0
 1472 03e7 18       		.uleb128 0x18
 1473 03e8 AC020000 		.4byte	.LASF50
 1474 03ec 01       		.byte	0x1
 1475 03ed F402     		.2byte	0x2f4
 1476 03ef 8F000000 		.4byte	0x8f
 1477 03f3 00000000 		.4byte	.LFB15
 1478 03f7 5C000000 		.4byte	.LFE15-.LFB15
 1479 03fb 01       		.uleb128 0x1
 1480 03fc 9C       		.byte	0x9c
 1481 03fd 3F040000 		.4byte	0x43f
 1482 0401 16       		.uleb128 0x16
 1483 0402 28030000 		.4byte	.LASF36
 1484 0406 01       		.byte	0x1
 1485 0407 F402     		.2byte	0x2f4
 1486 0409 83000000 		.4byte	0x83
 1487 040d 6F030000 		.4byte	.LLST16
 1488 0411 16       		.uleb128 0x16
 1489 0412 59030000 		.4byte	.LASF51
 1490 0416 01       		.byte	0x1
 1491 0417 F402     		.2byte	0x2f4
 1492 0419 8F000000 		.4byte	0x8f
 1493 041d 9B030000 		.4byte	.LLST17
 1494 0421 19       		.uleb128 0x19
 1495 0422 8F010000 		.4byte	.LASF52
 1496 0426 01       		.byte	0x1
 1497 0427 F602     		.2byte	0x2f6
 1498 0429 8F000000 		.4byte	0x8f
 1499 042d 01       		.uleb128 0x1
 1500 042e 50       		.byte	0x50
 1501 042f 0D       		.uleb128 0xd
 1502 0430 10000000 		.4byte	.LVL60
 1503 0434 B1050000 		.4byte	0x5b1
 1504 0438 0C       		.uleb128 0xc
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 43


 1505 0439 01       		.uleb128 0x1
 1506 043a 50       		.byte	0x50
 1507 043b 01       		.uleb128 0x1
 1508 043c 30       		.byte	0x30
 1509 043d 00       		.byte	0
 1510 043e 00       		.byte	0
 1511 043f 18       		.uleb128 0x18
 1512 0440 A8000000 		.4byte	.LASF53
 1513 0444 01       		.byte	0x1
 1514 0445 2A03     		.2byte	0x32a
 1515 0447 9B000000 		.4byte	0x9b
 1516 044b 00000000 		.4byte	.LFB16
 1517 044f 40000000 		.4byte	.LFE16-.LFB16
 1518 0453 01       		.uleb128 0x1
 1519 0454 9C       		.byte	0x9c
 1520 0455 95040000 		.4byte	0x495
 1521 0459 16       		.uleb128 0x16
 1522 045a 28030000 		.4byte	.LASF36
 1523 045e 01       		.byte	0x1
 1524 045f 2A03     		.2byte	0x32a
 1525 0461 83000000 		.4byte	0x83
 1526 0465 D2030000 		.4byte	.LLST18
 1527 0469 16       		.uleb128 0x16
 1528 046a 59030000 		.4byte	.LASF51
 1529 046e 01       		.byte	0x1
 1530 046f 2A03     		.2byte	0x32a
 1531 0471 8F000000 		.4byte	0x8f
 1532 0475 FE030000 		.4byte	.LLST19
 1533 0479 1A       		.uleb128 0x1a
 1534 047a 25010000 		.4byte	.LASF65
 1535 047e 01       		.byte	0x1
 1536 047f 2C03     		.2byte	0x32c
 1537 0481 C1000000 		.4byte	0xc1
 1538 0485 0D       		.uleb128 0xd
 1539 0486 10000000 		.4byte	.LVL69
 1540 048a B1050000 		.4byte	0x5b1
 1541 048e 0C       		.uleb128 0xc
 1542 048f 01       		.uleb128 0x1
 1543 0490 50       		.byte	0x50
 1544 0491 01       		.uleb128 0x1
 1545 0492 30       		.byte	0x30
 1546 0493 00       		.byte	0
 1547 0494 00       		.byte	0
 1548 0495 18       		.uleb128 0x18
 1549 0496 16000000 		.4byte	.LASF54
 1550 049a 01       		.byte	0x1
 1551 049b 5703     		.2byte	0x357
 1552 049d A7000000 		.4byte	0xa7
 1553 04a1 00000000 		.4byte	.LFB17
 1554 04a5 48000000 		.4byte	.LFE17-.LFB17
 1555 04a9 01       		.uleb128 0x1
 1556 04aa 9C       		.byte	0x9c
 1557 04ab ED040000 		.4byte	0x4ed
 1558 04af 16       		.uleb128 0x16
 1559 04b0 28030000 		.4byte	.LASF36
 1560 04b4 01       		.byte	0x1
 1561 04b5 5703     		.2byte	0x357
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 44


 1562 04b7 83000000 		.4byte	0x83
 1563 04bb 2A040000 		.4byte	.LLST20
 1564 04bf 16       		.uleb128 0x16
 1565 04c0 59030000 		.4byte	.LASF51
 1566 04c4 01       		.byte	0x1
 1567 04c5 5703     		.2byte	0x357
 1568 04c7 8F000000 		.4byte	0x8f
 1569 04cb 56040000 		.4byte	.LLST21
 1570 04cf 19       		.uleb128 0x19
 1571 04d0 4D010000 		.4byte	.LASF55
 1572 04d4 01       		.byte	0x1
 1573 04d5 5903     		.2byte	0x359
 1574 04d7 A7000000 		.4byte	0xa7
 1575 04db 01       		.uleb128 0x1
 1576 04dc 50       		.byte	0x50
 1577 04dd 0D       		.uleb128 0xd
 1578 04de 10000000 		.4byte	.LVL76
 1579 04e2 B1050000 		.4byte	0x5b1
 1580 04e6 0C       		.uleb128 0xc
 1581 04e7 01       		.uleb128 0x1
 1582 04e8 50       		.byte	0x50
 1583 04e9 01       		.uleb128 0x1
 1584 04ea 30       		.byte	0x30
 1585 04eb 00       		.byte	0
 1586 04ec 00       		.byte	0
 1587 04ed 0E       		.uleb128 0xe
 1588 04ee 83000000 		.4byte	0x83
 1589 04f2 FD040000 		.4byte	0x4fd
 1590 04f6 0F       		.uleb128 0xf
 1591 04f7 F8000000 		.4byte	0xf8
 1592 04fb 01       		.byte	0x1
 1593 04fc 00       		.byte	0
 1594 04fd 0A       		.uleb128 0xa
 1595 04fe 3F030000 		.4byte	.LASF56
 1596 0502 01       		.byte	0x1
 1597 0503 21       		.byte	0x21
 1598 0504 0E050000 		.4byte	0x50e
 1599 0508 05       		.uleb128 0x5
 1600 0509 03       		.byte	0x3
 1601 050a 00000000 		.4byte	ADC_channelsConfig
 1602 050e 10       		.uleb128 0x10
 1603 050f ED040000 		.4byte	0x4ed
 1604 0513 1B       		.uleb128 0x1b
 1605 0514 F3000000 		.4byte	.LASF57
 1606 0518 01       		.byte	0x1
 1607 0519 18       		.byte	0x18
 1608 051a 6B000000 		.4byte	0x6b
 1609 051e 05       		.uleb128 0x5
 1610 051f 03       		.byte	0x3
 1611 0520 00000000 		.4byte	ADC_initVar
 1612 0524 0E       		.uleb128 0xe
 1613 0525 8F000000 		.4byte	0x8f
 1614 0529 34050000 		.4byte	0x534
 1615 052d 0F       		.uleb128 0xf
 1616 052e F8000000 		.4byte	0xf8
 1617 0532 01       		.byte	0x1
 1618 0533 00       		.byte	0
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 45


 1619 0534 1B       		.uleb128 0x1b
 1620 0535 04030000 		.4byte	.LASF58
 1621 0539 01       		.byte	0x1
 1622 053a 19       		.byte	0x19
 1623 053b 45050000 		.4byte	0x545
 1624 053f 05       		.uleb128 0x5
 1625 0540 03       		.byte	0x3
 1626 0541 00000000 		.4byte	ADC_offset
 1627 0545 05       		.uleb128 0x5
 1628 0546 24050000 		.4byte	0x524
 1629 054a 0E       		.uleb128 0xe
 1630 054b 9B000000 		.4byte	0x9b
 1631 054f 5A050000 		.4byte	0x55a
 1632 0553 0F       		.uleb128 0xf
 1633 0554 F8000000 		.4byte	0xf8
 1634 0558 01       		.byte	0x1
 1635 0559 00       		.byte	0
 1636 055a 1B       		.uleb128 0x1b
 1637 055b BC000000 		.4byte	.LASF59
 1638 055f 01       		.byte	0x1
 1639 0560 1A       		.byte	0x1a
 1640 0561 6B050000 		.4byte	0x56b
 1641 0565 05       		.uleb128 0x5
 1642 0566 03       		.byte	0x3
 1643 0567 00000000 		.4byte	ADC_countsPer10Volt
 1644 056b 05       		.uleb128 0x5
 1645 056c 4A050000 		.4byte	0x54a
 1646 0570 1C       		.uleb128 0x1c
 1647 0571 6F020000 		.4byte	.LASF60
 1648 0575 03       		.byte	0x3
 1649 0576 4C       		.byte	0x4c
 1650 0577 86050000 		.4byte	0x586
 1651 057b 1D       		.uleb128 0x1d
 1652 057c 6B000000 		.4byte	0x6b
 1653 0580 1D       		.uleb128 0x1d
 1654 0581 6B000000 		.4byte	0x6b
 1655 0585 00       		.byte	0
 1656 0586 1E       		.uleb128 0x1e
 1657 0587 70010000 		.4byte	.LASF66
 1658 058b 03       		.byte	0x3
 1659 058c 49       		.byte	0x49
 1660 058d E5000000 		.4byte	0xe5
 1661 0591 A0050000 		.4byte	0x5a0
 1662 0595 1D       		.uleb128 0x1d
 1663 0596 6B000000 		.4byte	0x6b
 1664 059a 1D       		.uleb128 0x1d
 1665 059b E5000000 		.4byte	0xe5
 1666 059f 00       		.byte	0
 1667 05a0 1C       		.uleb128 0x1c
 1668 05a1 D6000000 		.4byte	.LASF61
 1669 05a5 03       		.byte	0x3
 1670 05a6 5B       		.byte	0x5b
 1671 05a7 B1050000 		.4byte	0x5b1
 1672 05ab 1D       		.uleb128 0x1d
 1673 05ac 77000000 		.4byte	0x77
 1674 05b0 00       		.byte	0
 1675 05b1 1F       		.uleb128 0x1f
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 46


 1676 05b2 D0020000 		.4byte	.LASF67
 1677 05b6 03       		.byte	0x3
 1678 05b7 63       		.byte	0x63
 1679 05b8 1D       		.uleb128 0x1d
 1680 05b9 6B000000 		.4byte	0x6b
 1681 05bd 00       		.byte	0
 1682 05be 00       		.byte	0
 1683              		.section	.debug_abbrev,"",%progbits
 1684              	.Ldebug_abbrev0:
 1685 0000 01       		.uleb128 0x1
 1686 0001 11       		.uleb128 0x11
 1687 0002 01       		.byte	0x1
 1688 0003 25       		.uleb128 0x25
 1689 0004 0E       		.uleb128 0xe
 1690 0005 13       		.uleb128 0x13
 1691 0006 0B       		.uleb128 0xb
 1692 0007 03       		.uleb128 0x3
 1693 0008 0E       		.uleb128 0xe
 1694 0009 1B       		.uleb128 0x1b
 1695 000a 0E       		.uleb128 0xe
 1696 000b 55       		.uleb128 0x55
 1697 000c 17       		.uleb128 0x17
 1698 000d 11       		.uleb128 0x11
 1699 000e 01       		.uleb128 0x1
 1700 000f 10       		.uleb128 0x10
 1701 0010 17       		.uleb128 0x17
 1702 0011 00       		.byte	0
 1703 0012 00       		.byte	0
 1704 0013 02       		.uleb128 0x2
 1705 0014 24       		.uleb128 0x24
 1706 0015 00       		.byte	0
 1707 0016 0B       		.uleb128 0xb
 1708 0017 0B       		.uleb128 0xb
 1709 0018 3E       		.uleb128 0x3e
 1710 0019 0B       		.uleb128 0xb
 1711 001a 03       		.uleb128 0x3
 1712 001b 0E       		.uleb128 0xe
 1713 001c 00       		.byte	0
 1714 001d 00       		.byte	0
 1715 001e 03       		.uleb128 0x3
 1716 001f 24       		.uleb128 0x24
 1717 0020 00       		.byte	0
 1718 0021 0B       		.uleb128 0xb
 1719 0022 0B       		.uleb128 0xb
 1720 0023 3E       		.uleb128 0x3e
 1721 0024 0B       		.uleb128 0xb
 1722 0025 03       		.uleb128 0x3
 1723 0026 08       		.uleb128 0x8
 1724 0027 00       		.byte	0
 1725 0028 00       		.byte	0
 1726 0029 04       		.uleb128 0x4
 1727 002a 16       		.uleb128 0x16
 1728 002b 00       		.byte	0
 1729 002c 03       		.uleb128 0x3
 1730 002d 0E       		.uleb128 0xe
 1731 002e 3A       		.uleb128 0x3a
 1732 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 47


 1733 0030 3B       		.uleb128 0x3b
 1734 0031 05       		.uleb128 0x5
 1735 0032 49       		.uleb128 0x49
 1736 0033 13       		.uleb128 0x13
 1737 0034 00       		.byte	0
 1738 0035 00       		.byte	0
 1739 0036 05       		.uleb128 0x5
 1740 0037 35       		.uleb128 0x35
 1741 0038 00       		.byte	0
 1742 0039 49       		.uleb128 0x49
 1743 003a 13       		.uleb128 0x13
 1744 003b 00       		.byte	0
 1745 003c 00       		.byte	0
 1746 003d 06       		.uleb128 0x6
 1747 003e 0F       		.uleb128 0xf
 1748 003f 00       		.byte	0
 1749 0040 0B       		.uleb128 0xb
 1750 0041 0B       		.uleb128 0xb
 1751 0042 49       		.uleb128 0x49
 1752 0043 13       		.uleb128 0x13
 1753 0044 00       		.byte	0
 1754 0045 00       		.byte	0
 1755 0046 07       		.uleb128 0x7
 1756 0047 15       		.uleb128 0x15
 1757 0048 00       		.byte	0
 1758 0049 27       		.uleb128 0x27
 1759 004a 19       		.uleb128 0x19
 1760 004b 00       		.byte	0
 1761 004c 00       		.byte	0
 1762 004d 08       		.uleb128 0x8
 1763 004e 2E       		.uleb128 0x2e
 1764 004f 01       		.byte	0x1
 1765 0050 3F       		.uleb128 0x3f
 1766 0051 19       		.uleb128 0x19
 1767 0052 03       		.uleb128 0x3
 1768 0053 0E       		.uleb128 0xe
 1769 0054 3A       		.uleb128 0x3a
 1770 0055 0B       		.uleb128 0xb
 1771 0056 3B       		.uleb128 0x3b
 1772 0057 0B       		.uleb128 0xb
 1773 0058 27       		.uleb128 0x27
 1774 0059 19       		.uleb128 0x19
 1775 005a 11       		.uleb128 0x11
 1776 005b 01       		.uleb128 0x1
 1777 005c 12       		.uleb128 0x12
 1778 005d 06       		.uleb128 0x6
 1779 005e 40       		.uleb128 0x40
 1780 005f 18       		.uleb128 0x18
 1781 0060 9642     		.uleb128 0x2116
 1782 0062 19       		.uleb128 0x19
 1783 0063 01       		.uleb128 0x1
 1784 0064 13       		.uleb128 0x13
 1785 0065 00       		.byte	0
 1786 0066 00       		.byte	0
 1787 0067 09       		.uleb128 0x9
 1788 0068 34       		.uleb128 0x34
 1789 0069 00       		.byte	0
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 48


 1790 006a 03       		.uleb128 0x3
 1791 006b 0E       		.uleb128 0xe
 1792 006c 3A       		.uleb128 0x3a
 1793 006d 0B       		.uleb128 0xb
 1794 006e 3B       		.uleb128 0x3b
 1795 006f 0B       		.uleb128 0xb
 1796 0070 49       		.uleb128 0x49
 1797 0071 13       		.uleb128 0x13
 1798 0072 02       		.uleb128 0x2
 1799 0073 17       		.uleb128 0x17
 1800 0074 00       		.byte	0
 1801 0075 00       		.byte	0
 1802 0076 0A       		.uleb128 0xa
 1803 0077 34       		.uleb128 0x34
 1804 0078 00       		.byte	0
 1805 0079 03       		.uleb128 0x3
 1806 007a 0E       		.uleb128 0xe
 1807 007b 3A       		.uleb128 0x3a
 1808 007c 0B       		.uleb128 0xb
 1809 007d 3B       		.uleb128 0x3b
 1810 007e 0B       		.uleb128 0xb
 1811 007f 49       		.uleb128 0x49
 1812 0080 13       		.uleb128 0x13
 1813 0081 02       		.uleb128 0x2
 1814 0082 18       		.uleb128 0x18
 1815 0083 00       		.byte	0
 1816 0084 00       		.byte	0
 1817 0085 0B       		.uleb128 0xb
 1818 0086 898201   		.uleb128 0x4109
 1819 0089 01       		.byte	0x1
 1820 008a 11       		.uleb128 0x11
 1821 008b 01       		.uleb128 0x1
 1822 008c 31       		.uleb128 0x31
 1823 008d 13       		.uleb128 0x13
 1824 008e 01       		.uleb128 0x1
 1825 008f 13       		.uleb128 0x13
 1826 0090 00       		.byte	0
 1827 0091 00       		.byte	0
 1828 0092 0C       		.uleb128 0xc
 1829 0093 8A8201   		.uleb128 0x410a
 1830 0096 00       		.byte	0
 1831 0097 02       		.uleb128 0x2
 1832 0098 18       		.uleb128 0x18
 1833 0099 9142     		.uleb128 0x2111
 1834 009b 18       		.uleb128 0x18
 1835 009c 00       		.byte	0
 1836 009d 00       		.byte	0
 1837 009e 0D       		.uleb128 0xd
 1838 009f 898201   		.uleb128 0x4109
 1839 00a2 01       		.byte	0x1
 1840 00a3 11       		.uleb128 0x11
 1841 00a4 01       		.uleb128 0x1
 1842 00a5 31       		.uleb128 0x31
 1843 00a6 13       		.uleb128 0x13
 1844 00a7 00       		.byte	0
 1845 00a8 00       		.byte	0
 1846 00a9 0E       		.uleb128 0xe
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 49


 1847 00aa 01       		.uleb128 0x1
 1848 00ab 01       		.byte	0x1
 1849 00ac 49       		.uleb128 0x49
 1850 00ad 13       		.uleb128 0x13
 1851 00ae 01       		.uleb128 0x1
 1852 00af 13       		.uleb128 0x13
 1853 00b0 00       		.byte	0
 1854 00b1 00       		.byte	0
 1855 00b2 0F       		.uleb128 0xf
 1856 00b3 21       		.uleb128 0x21
 1857 00b4 00       		.byte	0
 1858 00b5 49       		.uleb128 0x49
 1859 00b6 13       		.uleb128 0x13
 1860 00b7 2F       		.uleb128 0x2f
 1861 00b8 0B       		.uleb128 0xb
 1862 00b9 00       		.byte	0
 1863 00ba 00       		.byte	0
 1864 00bb 10       		.uleb128 0x10
 1865 00bc 26       		.uleb128 0x26
 1866 00bd 00       		.byte	0
 1867 00be 49       		.uleb128 0x49
 1868 00bf 13       		.uleb128 0x13
 1869 00c0 00       		.byte	0
 1870 00c1 00       		.byte	0
 1871 00c2 11       		.uleb128 0x11
 1872 00c3 2E       		.uleb128 0x2e
 1873 00c4 01       		.byte	0x1
 1874 00c5 3F       		.uleb128 0x3f
 1875 00c6 19       		.uleb128 0x19
 1876 00c7 03       		.uleb128 0x3
 1877 00c8 0E       		.uleb128 0xe
 1878 00c9 3A       		.uleb128 0x3a
 1879 00ca 0B       		.uleb128 0xb
 1880 00cb 3B       		.uleb128 0x3b
 1881 00cc 05       		.uleb128 0x5
 1882 00cd 27       		.uleb128 0x27
 1883 00ce 19       		.uleb128 0x19
 1884 00cf 11       		.uleb128 0x11
 1885 00d0 01       		.uleb128 0x1
 1886 00d1 12       		.uleb128 0x12
 1887 00d2 06       		.uleb128 0x6
 1888 00d3 40       		.uleb128 0x40
 1889 00d4 18       		.uleb128 0x18
 1890 00d5 9742     		.uleb128 0x2117
 1891 00d7 19       		.uleb128 0x19
 1892 00d8 01       		.uleb128 0x1
 1893 00d9 13       		.uleb128 0x13
 1894 00da 00       		.byte	0
 1895 00db 00       		.byte	0
 1896 00dc 12       		.uleb128 0x12
 1897 00dd 2E       		.uleb128 0x2e
 1898 00de 01       		.byte	0x1
 1899 00df 3F       		.uleb128 0x3f
 1900 00e0 19       		.uleb128 0x19
 1901 00e1 03       		.uleb128 0x3
 1902 00e2 0E       		.uleb128 0xe
 1903 00e3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 50


 1904 00e4 0B       		.uleb128 0xb
 1905 00e5 3B       		.uleb128 0x3b
 1906 00e6 0B       		.uleb128 0xb
 1907 00e7 27       		.uleb128 0x27
 1908 00e8 19       		.uleb128 0x19
 1909 00e9 11       		.uleb128 0x11
 1910 00ea 01       		.uleb128 0x1
 1911 00eb 12       		.uleb128 0x12
 1912 00ec 06       		.uleb128 0x6
 1913 00ed 40       		.uleb128 0x40
 1914 00ee 18       		.uleb128 0x18
 1915 00ef 9742     		.uleb128 0x2117
 1916 00f1 19       		.uleb128 0x19
 1917 00f2 01       		.uleb128 0x1
 1918 00f3 13       		.uleb128 0x13
 1919 00f4 00       		.byte	0
 1920 00f5 00       		.byte	0
 1921 00f6 13       		.uleb128 0x13
 1922 00f7 898201   		.uleb128 0x4109
 1923 00fa 00       		.byte	0
 1924 00fb 11       		.uleb128 0x11
 1925 00fc 01       		.uleb128 0x1
 1926 00fd 31       		.uleb128 0x31
 1927 00fe 13       		.uleb128 0x13
 1928 00ff 00       		.byte	0
 1929 0100 00       		.byte	0
 1930 0101 14       		.uleb128 0x14
 1931 0102 2E       		.uleb128 0x2e
 1932 0103 00       		.byte	0
 1933 0104 3F       		.uleb128 0x3f
 1934 0105 19       		.uleb128 0x19
 1935 0106 03       		.uleb128 0x3
 1936 0107 0E       		.uleb128 0xe
 1937 0108 3A       		.uleb128 0x3a
 1938 0109 0B       		.uleb128 0xb
 1939 010a 3B       		.uleb128 0x3b
 1940 010b 05       		.uleb128 0x5
 1941 010c 27       		.uleb128 0x27
 1942 010d 19       		.uleb128 0x19
 1943 010e 11       		.uleb128 0x11
 1944 010f 01       		.uleb128 0x1
 1945 0110 12       		.uleb128 0x12
 1946 0111 06       		.uleb128 0x6
 1947 0112 40       		.uleb128 0x40
 1948 0113 18       		.uleb128 0x18
 1949 0114 9742     		.uleb128 0x2117
 1950 0116 19       		.uleb128 0x19
 1951 0117 00       		.byte	0
 1952 0118 00       		.byte	0
 1953 0119 15       		.uleb128 0x15
 1954 011a 2E       		.uleb128 0x2e
 1955 011b 01       		.byte	0x1
 1956 011c 3F       		.uleb128 0x3f
 1957 011d 19       		.uleb128 0x19
 1958 011e 03       		.uleb128 0x3
 1959 011f 0E       		.uleb128 0xe
 1960 0120 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 51


 1961 0121 0B       		.uleb128 0xb
 1962 0122 3B       		.uleb128 0x3b
 1963 0123 05       		.uleb128 0x5
 1964 0124 27       		.uleb128 0x27
 1965 0125 19       		.uleb128 0x19
 1966 0126 49       		.uleb128 0x49
 1967 0127 13       		.uleb128 0x13
 1968 0128 11       		.uleb128 0x11
 1969 0129 01       		.uleb128 0x1
 1970 012a 12       		.uleb128 0x12
 1971 012b 06       		.uleb128 0x6
 1972 012c 40       		.uleb128 0x40
 1973 012d 18       		.uleb128 0x18
 1974 012e 9742     		.uleb128 0x2117
 1975 0130 19       		.uleb128 0x19
 1976 0131 01       		.uleb128 0x1
 1977 0132 13       		.uleb128 0x13
 1978 0133 00       		.byte	0
 1979 0134 00       		.byte	0
 1980 0135 16       		.uleb128 0x16
 1981 0136 05       		.uleb128 0x5
 1982 0137 00       		.byte	0
 1983 0138 03       		.uleb128 0x3
 1984 0139 0E       		.uleb128 0xe
 1985 013a 3A       		.uleb128 0x3a
 1986 013b 0B       		.uleb128 0xb
 1987 013c 3B       		.uleb128 0x3b
 1988 013d 05       		.uleb128 0x5
 1989 013e 49       		.uleb128 0x49
 1990 013f 13       		.uleb128 0x13
 1991 0140 02       		.uleb128 0x2
 1992 0141 17       		.uleb128 0x17
 1993 0142 00       		.byte	0
 1994 0143 00       		.byte	0
 1995 0144 17       		.uleb128 0x17
 1996 0145 34       		.uleb128 0x34
 1997 0146 00       		.byte	0
 1998 0147 03       		.uleb128 0x3
 1999 0148 0E       		.uleb128 0xe
 2000 0149 3A       		.uleb128 0x3a
 2001 014a 0B       		.uleb128 0xb
 2002 014b 3B       		.uleb128 0x3b
 2003 014c 05       		.uleb128 0x5
 2004 014d 49       		.uleb128 0x49
 2005 014e 13       		.uleb128 0x13
 2006 014f 02       		.uleb128 0x2
 2007 0150 17       		.uleb128 0x17
 2008 0151 00       		.byte	0
 2009 0152 00       		.byte	0
 2010 0153 18       		.uleb128 0x18
 2011 0154 2E       		.uleb128 0x2e
 2012 0155 01       		.byte	0x1
 2013 0156 3F       		.uleb128 0x3f
 2014 0157 19       		.uleb128 0x19
 2015 0158 03       		.uleb128 0x3
 2016 0159 0E       		.uleb128 0xe
 2017 015a 3A       		.uleb128 0x3a
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 52


 2018 015b 0B       		.uleb128 0xb
 2019 015c 3B       		.uleb128 0x3b
 2020 015d 05       		.uleb128 0x5
 2021 015e 27       		.uleb128 0x27
 2022 015f 19       		.uleb128 0x19
 2023 0160 49       		.uleb128 0x49
 2024 0161 13       		.uleb128 0x13
 2025 0162 11       		.uleb128 0x11
 2026 0163 01       		.uleb128 0x1
 2027 0164 12       		.uleb128 0x12
 2028 0165 06       		.uleb128 0x6
 2029 0166 40       		.uleb128 0x40
 2030 0167 18       		.uleb128 0x18
 2031 0168 9642     		.uleb128 0x2116
 2032 016a 19       		.uleb128 0x19
 2033 016b 01       		.uleb128 0x1
 2034 016c 13       		.uleb128 0x13
 2035 016d 00       		.byte	0
 2036 016e 00       		.byte	0
 2037 016f 19       		.uleb128 0x19
 2038 0170 34       		.uleb128 0x34
 2039 0171 00       		.byte	0
 2040 0172 03       		.uleb128 0x3
 2041 0173 0E       		.uleb128 0xe
 2042 0174 3A       		.uleb128 0x3a
 2043 0175 0B       		.uleb128 0xb
 2044 0176 3B       		.uleb128 0x3b
 2045 0177 05       		.uleb128 0x5
 2046 0178 49       		.uleb128 0x49
 2047 0179 13       		.uleb128 0x13
 2048 017a 02       		.uleb128 0x2
 2049 017b 18       		.uleb128 0x18
 2050 017c 00       		.byte	0
 2051 017d 00       		.byte	0
 2052 017e 1A       		.uleb128 0x1a
 2053 017f 34       		.uleb128 0x34
 2054 0180 00       		.byte	0
 2055 0181 03       		.uleb128 0x3
 2056 0182 0E       		.uleb128 0xe
 2057 0183 3A       		.uleb128 0x3a
 2058 0184 0B       		.uleb128 0xb
 2059 0185 3B       		.uleb128 0x3b
 2060 0186 05       		.uleb128 0x5
 2061 0187 49       		.uleb128 0x49
 2062 0188 13       		.uleb128 0x13
 2063 0189 00       		.byte	0
 2064 018a 00       		.byte	0
 2065 018b 1B       		.uleb128 0x1b
 2066 018c 34       		.uleb128 0x34
 2067 018d 00       		.byte	0
 2068 018e 03       		.uleb128 0x3
 2069 018f 0E       		.uleb128 0xe
 2070 0190 3A       		.uleb128 0x3a
 2071 0191 0B       		.uleb128 0xb
 2072 0192 3B       		.uleb128 0x3b
 2073 0193 0B       		.uleb128 0xb
 2074 0194 49       		.uleb128 0x49
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 53


 2075 0195 13       		.uleb128 0x13
 2076 0196 3F       		.uleb128 0x3f
 2077 0197 19       		.uleb128 0x19
 2078 0198 02       		.uleb128 0x2
 2079 0199 18       		.uleb128 0x18
 2080 019a 00       		.byte	0
 2081 019b 00       		.byte	0
 2082 019c 1C       		.uleb128 0x1c
 2083 019d 2E       		.uleb128 0x2e
 2084 019e 01       		.byte	0x1
 2085 019f 3F       		.uleb128 0x3f
 2086 01a0 19       		.uleb128 0x19
 2087 01a1 03       		.uleb128 0x3
 2088 01a2 0E       		.uleb128 0xe
 2089 01a3 3A       		.uleb128 0x3a
 2090 01a4 0B       		.uleb128 0xb
 2091 01a5 3B       		.uleb128 0x3b
 2092 01a6 0B       		.uleb128 0xb
 2093 01a7 27       		.uleb128 0x27
 2094 01a8 19       		.uleb128 0x19
 2095 01a9 3C       		.uleb128 0x3c
 2096 01aa 19       		.uleb128 0x19
 2097 01ab 01       		.uleb128 0x1
 2098 01ac 13       		.uleb128 0x13
 2099 01ad 00       		.byte	0
 2100 01ae 00       		.byte	0
 2101 01af 1D       		.uleb128 0x1d
 2102 01b0 05       		.uleb128 0x5
 2103 01b1 00       		.byte	0
 2104 01b2 49       		.uleb128 0x49
 2105 01b3 13       		.uleb128 0x13
 2106 01b4 00       		.byte	0
 2107 01b5 00       		.byte	0
 2108 01b6 1E       		.uleb128 0x1e
 2109 01b7 2E       		.uleb128 0x2e
 2110 01b8 01       		.byte	0x1
 2111 01b9 3F       		.uleb128 0x3f
 2112 01ba 19       		.uleb128 0x19
 2113 01bb 03       		.uleb128 0x3
 2114 01bc 0E       		.uleb128 0xe
 2115 01bd 3A       		.uleb128 0x3a
 2116 01be 0B       		.uleb128 0xb
 2117 01bf 3B       		.uleb128 0x3b
 2118 01c0 0B       		.uleb128 0xb
 2119 01c1 27       		.uleb128 0x27
 2120 01c2 19       		.uleb128 0x19
 2121 01c3 49       		.uleb128 0x49
 2122 01c4 13       		.uleb128 0x13
 2123 01c5 3C       		.uleb128 0x3c
 2124 01c6 19       		.uleb128 0x19
 2125 01c7 01       		.uleb128 0x1
 2126 01c8 13       		.uleb128 0x13
 2127 01c9 00       		.byte	0
 2128 01ca 00       		.byte	0
 2129 01cb 1F       		.uleb128 0x1f
 2130 01cc 2E       		.uleb128 0x2e
 2131 01cd 01       		.byte	0x1
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 54


 2132 01ce 3F       		.uleb128 0x3f
 2133 01cf 19       		.uleb128 0x19
 2134 01d0 03       		.uleb128 0x3
 2135 01d1 0E       		.uleb128 0xe
 2136 01d2 3A       		.uleb128 0x3a
 2137 01d3 0B       		.uleb128 0xb
 2138 01d4 3B       		.uleb128 0x3b
 2139 01d5 0B       		.uleb128 0xb
 2140 01d6 27       		.uleb128 0x27
 2141 01d7 19       		.uleb128 0x19
 2142 01d8 3C       		.uleb128 0x3c
 2143 01d9 19       		.uleb128 0x19
 2144 01da 00       		.byte	0
 2145 01db 00       		.byte	0
 2146 01dc 00       		.byte	0
 2147              		.section	.debug_loc,"",%progbits
 2148              	.Ldebug_loc0:
 2149              	.LLST0:
 2150 0000 7E000000 		.4byte	.LVL5
 2151 0004 82000000 		.4byte	.LVL6
 2152 0008 0200     		.2byte	0x2
 2153 000a 30       		.byte	0x30
 2154 000b 9F       		.byte	0x9f
 2155 000c 82000000 		.4byte	.LVL6
 2156 0010 16010000 		.4byte	.LVL20
 2157 0014 0100     		.2byte	0x1
 2158 0016 54       		.byte	0x54
 2159 0017 00000000 		.4byte	0
 2160 001b 00000000 		.4byte	0
 2161              	.LLST1:
 2162 001f 76000000 		.4byte	.LVL2
 2163 0023 7A000000 		.4byte	.LVL3
 2164 0027 0100     		.2byte	0x1
 2165 0029 50       		.byte	0x50
 2166 002a 7A000000 		.4byte	.LVL3
 2167 002e 7C000000 		.4byte	.LVL4
 2168 0032 0100     		.2byte	0x1
 2169 0034 52       		.byte	0x52
 2170 0035 7C000000 		.4byte	.LVL4
 2171 0039 82000000 		.4byte	.LVL6
 2172 003d 0100     		.2byte	0x1
 2173 003f 53       		.byte	0x53
 2174 0040 8E000000 		.4byte	.LVL7
 2175 0044 A0000000 		.4byte	.LVL9
 2176 0048 0100     		.2byte	0x1
 2177 004a 53       		.byte	0x53
 2178 004b A0000000 		.4byte	.LVL9
 2179 004f A6000000 		.4byte	.LVL10
 2180 0053 0200     		.2byte	0x2
 2181 0055 72       		.byte	0x72
 2182 0056 00       		.sleb128 0
 2183 0057 A6000000 		.4byte	.LVL10
 2184 005b B2000000 		.4byte	.LVL11
 2185 005f 0700     		.2byte	0x7
 2186 0061 74       		.byte	0x74
 2187 0062 00       		.sleb128 0
 2188 0063 32       		.byte	0x32
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 55


 2189 0064 24       		.byte	0x24
 2190 0065 7C       		.byte	0x7c
 2191 0066 00       		.sleb128 0
 2192 0067 22       		.byte	0x22
 2193 0068 B2000000 		.4byte	.LVL11
 2194 006c B6000000 		.4byte	.LVL12
 2195 0070 1E00     		.2byte	0x1e
 2196 0072 74       		.byte	0x74
 2197 0073 00       		.sleb128 0
 2198 0074 32       		.byte	0x32
 2199 0075 24       		.byte	0x24
 2200 0076 03       		.byte	0x3
 2201 0077 00000000 		.4byte	.LANCHOR0
 2202 007b 22       		.byte	0x22
 2203 007c 06       		.byte	0x6
 2204 007d 0A       		.byte	0xa
 2205 007e 0037     		.2byte	0x3700
 2206 0080 1A       		.byte	0x1a
 2207 0081 74       		.byte	0x74
 2208 0082 00       		.sleb128 0
 2209 0083 03       		.byte	0x3
 2210 0084 08000000 		.4byte	.LANCHOR0+8
 2211 0088 22       		.byte	0x22
 2212 0089 94       		.byte	0x94
 2213 008a 01       		.byte	0x1
 2214 008b 08       		.byte	0x8
 2215 008c FF       		.byte	0xff
 2216 008d 1A       		.byte	0x1a
 2217 008e 21       		.byte	0x21
 2218 008f 9F       		.byte	0x9f
 2219 0090 B6000000 		.4byte	.LVL12
 2220 0094 C2000000 		.4byte	.LVL13
 2221 0098 1A00     		.2byte	0x1a
 2222 009a 74       		.byte	0x74
 2223 009b 00       		.sleb128 0
 2224 009c 32       		.byte	0x32
 2225 009d 24       		.byte	0x24
 2226 009e 72       		.byte	0x72
 2227 009f 00       		.sleb128 0
 2228 00a0 22       		.byte	0x22
 2229 00a1 06       		.byte	0x6
 2230 00a2 0A       		.byte	0xa
 2231 00a3 0037     		.2byte	0x3700
 2232 00a5 1A       		.byte	0x1a
 2233 00a6 72       		.byte	0x72
 2234 00a7 00       		.sleb128 0
 2235 00a8 74       		.byte	0x74
 2236 00a9 00       		.sleb128 0
 2237 00aa 22       		.byte	0x22
 2238 00ab 23       		.byte	0x23
 2239 00ac 08       		.uleb128 0x8
 2240 00ad 94       		.byte	0x94
 2241 00ae 01       		.byte	0x1
 2242 00af 08       		.byte	0x8
 2243 00b0 FF       		.byte	0xff
 2244 00b1 1A       		.byte	0x1a
 2245 00b2 21       		.byte	0x21
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 56


 2246 00b3 9F       		.byte	0x9f
 2247 00b4 C2000000 		.4byte	.LVL13
 2248 00b8 D2000000 		.4byte	.LVL14
 2249 00bc 1E00     		.2byte	0x1e
 2250 00be 74       		.byte	0x74
 2251 00bf 00       		.sleb128 0
 2252 00c0 32       		.byte	0x32
 2253 00c1 24       		.byte	0x24
 2254 00c2 03       		.byte	0x3
 2255 00c3 00000000 		.4byte	.LANCHOR0
 2256 00c7 22       		.byte	0x22
 2257 00c8 06       		.byte	0x6
 2258 00c9 0A       		.byte	0xa
 2259 00ca 0037     		.2byte	0x3700
 2260 00cc 1A       		.byte	0x1a
 2261 00cd 74       		.byte	0x74
 2262 00ce 00       		.sleb128 0
 2263 00cf 03       		.byte	0x3
 2264 00d0 08000000 		.4byte	.LANCHOR0+8
 2265 00d4 22       		.byte	0x22
 2266 00d5 94       		.byte	0x94
 2267 00d6 01       		.byte	0x1
 2268 00d7 08       		.byte	0x8
 2269 00d8 FF       		.byte	0xff
 2270 00d9 1A       		.byte	0x1a
 2271 00da 21       		.byte	0x21
 2272 00db 9F       		.byte	0x9f
 2273 00dc D2000000 		.4byte	.LVL14
 2274 00e0 D8000000 		.4byte	.LVL15
 2275 00e4 1A00     		.2byte	0x1a
 2276 00e6 74       		.byte	0x74
 2277 00e7 00       		.sleb128 0
 2278 00e8 32       		.byte	0x32
 2279 00e9 24       		.byte	0x24
 2280 00ea 72       		.byte	0x72
 2281 00eb 00       		.sleb128 0
 2282 00ec 22       		.byte	0x22
 2283 00ed 06       		.byte	0x6
 2284 00ee 0A       		.byte	0xa
 2285 00ef 0037     		.2byte	0x3700
 2286 00f1 1A       		.byte	0x1a
 2287 00f2 72       		.byte	0x72
 2288 00f3 00       		.sleb128 0
 2289 00f4 74       		.byte	0x74
 2290 00f5 00       		.sleb128 0
 2291 00f6 22       		.byte	0x22
 2292 00f7 23       		.byte	0x23
 2293 00f8 08       		.uleb128 0x8
 2294 00f9 94       		.byte	0x94
 2295 00fa 01       		.byte	0x1
 2296 00fb 08       		.byte	0x8
 2297 00fc FF       		.byte	0xff
 2298 00fd 1A       		.byte	0x1a
 2299 00fe 21       		.byte	0x21
 2300 00ff 9F       		.byte	0x9f
 2301 0100 D8000000 		.4byte	.LVL15
 2302 0104 12010000 		.4byte	.LVL19
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 57


 2303 0108 1E00     		.2byte	0x1e
 2304 010a 74       		.byte	0x74
 2305 010b 00       		.sleb128 0
 2306 010c 32       		.byte	0x32
 2307 010d 24       		.byte	0x24
 2308 010e 03       		.byte	0x3
 2309 010f 00000000 		.4byte	.LANCHOR0
 2310 0113 22       		.byte	0x22
 2311 0114 06       		.byte	0x6
 2312 0115 0A       		.byte	0xa
 2313 0116 0037     		.2byte	0x3700
 2314 0118 1A       		.byte	0x1a
 2315 0119 74       		.byte	0x74
 2316 011a 00       		.sleb128 0
 2317 011b 03       		.byte	0x3
 2318 011c 08000000 		.4byte	.LANCHOR0+8
 2319 0120 22       		.byte	0x22
 2320 0121 94       		.byte	0x94
 2321 0122 01       		.byte	0x1
 2322 0123 08       		.byte	0x8
 2323 0124 FF       		.byte	0xff
 2324 0125 1A       		.byte	0x1a
 2325 0126 21       		.byte	0x21
 2326 0127 9F       		.byte	0x9f
 2327 0128 00000000 		.4byte	0
 2328 012c 00000000 		.4byte	0
 2329              	.LLST2:
 2330 0130 E2000000 		.4byte	.LVL16
 2331 0134 FC000000 		.4byte	.LVL17
 2332 0138 0100     		.2byte	0x1
 2333 013a 50       		.byte	0x50
 2334 013b 00000000 		.4byte	0
 2335 013f 00000000 		.4byte	0
 2336              	.LLST3:
 2337 0143 00000000 		.4byte	.LVL24
 2338 0147 06000000 		.4byte	.LVL26
 2339 014b 0100     		.2byte	0x1
 2340 014d 50       		.byte	0x50
 2341 014e 06000000 		.4byte	.LVL26
 2342 0152 1A000000 		.4byte	.LVL28
 2343 0156 0100     		.2byte	0x1
 2344 0158 52       		.byte	0x52
 2345 0159 1A000000 		.4byte	.LVL28
 2346 015d 20000000 		.4byte	.LVL29
 2347 0161 0400     		.2byte	0x4
 2348 0163 F3       		.byte	0xf3
 2349 0164 01       		.uleb128 0x1
 2350 0165 50       		.byte	0x50
 2351 0166 9F       		.byte	0x9f
 2352 0167 20000000 		.4byte	.LVL29
 2353 016b 22000000 		.4byte	.LVL30
 2354 016f 0100     		.2byte	0x1
 2355 0171 50       		.byte	0x50
 2356 0172 22000000 		.4byte	.LVL30
 2357 0176 28000000 		.4byte	.LFE6
 2358 017a 0400     		.2byte	0x4
 2359 017c F3       		.byte	0xf3
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 58


 2360 017d 01       		.uleb128 0x1
 2361 017e 50       		.byte	0x50
 2362 017f 9F       		.byte	0x9f
 2363 0180 00000000 		.4byte	0
 2364 0184 00000000 		.4byte	0
 2365              	.LLST4:
 2366 0188 02000000 		.4byte	.LVL25
 2367 018c 06000000 		.4byte	.LVL26
 2368 0190 0200     		.2byte	0x2
 2369 0192 30       		.byte	0x30
 2370 0193 9F       		.byte	0x9f
 2371 0194 0E000000 		.4byte	.LVL27
 2372 0198 20000000 		.4byte	.LVL29
 2373 019c 0100     		.2byte	0x1
 2374 019e 50       		.byte	0x50
 2375 019f 20000000 		.4byte	.LVL29
 2376 01a3 22000000 		.4byte	.LVL30
 2377 01a7 0200     		.2byte	0x2
 2378 01a9 30       		.byte	0x30
 2379 01aa 9F       		.byte	0x9f
 2380 01ab 22000000 		.4byte	.LVL30
 2381 01af 28000000 		.4byte	.LFE6
 2382 01b3 0100     		.2byte	0x1
 2383 01b5 50       		.byte	0x50
 2384 01b6 00000000 		.4byte	0
 2385 01ba 00000000 		.4byte	0
 2386              	.LLST5:
 2387 01be 00000000 		.4byte	.LVL31
 2388 01c2 0A000000 		.4byte	.LVL32
 2389 01c6 0100     		.2byte	0x1
 2390 01c8 50       		.byte	0x50
 2391 01c9 0A000000 		.4byte	.LVL32
 2392 01cd 14000000 		.4byte	.LVL34
 2393 01d1 0100     		.2byte	0x1
 2394 01d3 54       		.byte	0x54
 2395 01d4 14000000 		.4byte	.LVL34
 2396 01d8 22000000 		.4byte	.LVL36
 2397 01dc 0400     		.2byte	0x4
 2398 01de F3       		.byte	0xf3
 2399 01df 01       		.uleb128 0x1
 2400 01e0 50       		.byte	0x50
 2401 01e1 9F       		.byte	0x9f
 2402 01e2 22000000 		.4byte	.LVL36
 2403 01e6 24000000 		.4byte	.LVL37
 2404 01ea 0100     		.2byte	0x1
 2405 01ec 54       		.byte	0x54
 2406 01ed 24000000 		.4byte	.LVL37
 2407 01f1 2C000000 		.4byte	.LFE7
 2408 01f5 0400     		.2byte	0x4
 2409 01f7 F3       		.byte	0xf3
 2410 01f8 01       		.uleb128 0x1
 2411 01f9 50       		.byte	0x50
 2412 01fa 9F       		.byte	0x9f
 2413 01fb 00000000 		.4byte	0
 2414 01ff 00000000 		.4byte	0
 2415              	.LLST6:
 2416 0203 20000000 		.4byte	.LVL35
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 59


 2417 0207 22000000 		.4byte	.LVL36
 2418 020b 0100     		.2byte	0x1
 2419 020d 50       		.byte	0x50
 2420 020e 24000000 		.4byte	.LVL37
 2421 0212 26000000 		.4byte	.LVL38
 2422 0216 0100     		.2byte	0x1
 2423 0218 50       		.byte	0x50
 2424 0219 00000000 		.4byte	0
 2425 021d 00000000 		.4byte	0
 2426              	.LLST7:
 2427 0221 00000000 		.4byte	.LVL39
 2428 0225 04000000 		.4byte	.LVL40
 2429 0229 0100     		.2byte	0x1
 2430 022b 50       		.byte	0x50
 2431 022c 04000000 		.4byte	.LVL40
 2432 0230 10000000 		.4byte	.LFE8
 2433 0234 0400     		.2byte	0x4
 2434 0236 F3       		.byte	0xf3
 2435 0237 01       		.uleb128 0x1
 2436 0238 50       		.byte	0x50
 2437 0239 9F       		.byte	0x9f
 2438 023a 00000000 		.4byte	0
 2439 023e 00000000 		.4byte	0
 2440              	.LLST8:
 2441 0242 00000000 		.4byte	.LVL41
 2442 0246 0E000000 		.4byte	.LVL42
 2443 024a 0100     		.2byte	0x1
 2444 024c 50       		.byte	0x50
 2445 024d 0E000000 		.4byte	.LVL42
 2446 0251 1C000000 		.4byte	.LFE9
 2447 0255 0400     		.2byte	0x4
 2448 0257 F3       		.byte	0xf3
 2449 0258 01       		.uleb128 0x1
 2450 0259 50       		.byte	0x50
 2451 025a 9F       		.byte	0x9f
 2452 025b 00000000 		.4byte	0
 2453 025f 00000000 		.4byte	0
 2454              	.LLST9:
 2455 0263 00000000 		.4byte	.LVL43
 2456 0267 0E000000 		.4byte	.LVL44
 2457 026b 0100     		.2byte	0x1
 2458 026d 50       		.byte	0x50
 2459 026e 0E000000 		.4byte	.LVL44
 2460 0272 18000000 		.4byte	.LFE10
 2461 0276 0400     		.2byte	0x4
 2462 0278 F3       		.byte	0xf3
 2463 0279 01       		.uleb128 0x1
 2464 027a 50       		.byte	0x50
 2465 027b 9F       		.byte	0x9f
 2466 027c 00000000 		.4byte	0
 2467 0280 00000000 		.4byte	0
 2468              	.LLST10:
 2469 0284 00000000 		.4byte	.LVL45
 2470 0288 04000000 		.4byte	.LVL46
 2471 028c 0100     		.2byte	0x1
 2472 028e 50       		.byte	0x50
 2473 028f 04000000 		.4byte	.LVL46
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 60


 2474 0293 10000000 		.4byte	.LFE11
 2475 0297 0400     		.2byte	0x4
 2476 0299 F3       		.byte	0xf3
 2477 029a 01       		.uleb128 0x1
 2478 029b 50       		.byte	0x50
 2479 029c 9F       		.byte	0x9f
 2480 029d 00000000 		.4byte	0
 2481 02a1 00000000 		.4byte	0
 2482              	.LLST11:
 2483 02a5 00000000 		.4byte	.LVL47
 2484 02a9 04000000 		.4byte	.LVL48
 2485 02ad 0100     		.2byte	0x1
 2486 02af 50       		.byte	0x50
 2487 02b0 04000000 		.4byte	.LVL48
 2488 02b4 10000000 		.4byte	.LFE12
 2489 02b8 0400     		.2byte	0x4
 2490 02ba F3       		.byte	0xf3
 2491 02bb 01       		.uleb128 0x1
 2492 02bc 50       		.byte	0x50
 2493 02bd 9F       		.byte	0x9f
 2494 02be 00000000 		.4byte	0
 2495 02c2 00000000 		.4byte	0
 2496              	.LLST12:
 2497 02c6 00000000 		.4byte	.LVL49
 2498 02ca 0C000000 		.4byte	.LVL50
 2499 02ce 0100     		.2byte	0x1
 2500 02d0 50       		.byte	0x50
 2501 02d1 0C000000 		.4byte	.LVL50
 2502 02d5 12000000 		.4byte	.LVL52
 2503 02d9 0100     		.2byte	0x1
 2504 02db 54       		.byte	0x54
 2505 02dc 12000000 		.4byte	.LVL52
 2506 02e0 1C000000 		.4byte	.LFE13
 2507 02e4 0400     		.2byte	0x4
 2508 02e6 F3       		.byte	0xf3
 2509 02e7 01       		.uleb128 0x1
 2510 02e8 50       		.byte	0x50
 2511 02e9 9F       		.byte	0x9f
 2512 02ea 00000000 		.4byte	0
 2513 02ee 00000000 		.4byte	0
 2514              	.LLST13:
 2515 02f2 00000000 		.4byte	.LVL49
 2516 02f6 0F000000 		.4byte	.LVL51-1
 2517 02fa 0100     		.2byte	0x1
 2518 02fc 51       		.byte	0x51
 2519 02fd 0F000000 		.4byte	.LVL51-1
 2520 0301 1C000000 		.4byte	.LFE13
 2521 0305 0400     		.2byte	0x4
 2522 0307 F3       		.byte	0xf3
 2523 0308 01       		.uleb128 0x1
 2524 0309 51       		.byte	0x51
 2525 030a 9F       		.byte	0x9f
 2526 030b 00000000 		.4byte	0
 2527 030f 00000000 		.4byte	0
 2528              	.LLST14:
 2529 0313 00000000 		.4byte	.LVL53
 2530 0317 0C000000 		.4byte	.LVL54
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 61


 2531 031b 0100     		.2byte	0x1
 2532 031d 50       		.byte	0x50
 2533 031e 0C000000 		.4byte	.LVL54
 2534 0322 12000000 		.4byte	.LVL56
 2535 0326 0100     		.2byte	0x1
 2536 0328 54       		.byte	0x54
 2537 0329 12000000 		.4byte	.LVL56
 2538 032d 1C000000 		.4byte	.LFE14
 2539 0331 0400     		.2byte	0x4
 2540 0333 F3       		.byte	0xf3
 2541 0334 01       		.uleb128 0x1
 2542 0335 50       		.byte	0x50
 2543 0336 9F       		.byte	0x9f
 2544 0337 00000000 		.4byte	0
 2545 033b 00000000 		.4byte	0
 2546              	.LLST15:
 2547 033f 00000000 		.4byte	.LVL53
 2548 0343 0F000000 		.4byte	.LVL55-1
 2549 0347 0100     		.2byte	0x1
 2550 0349 51       		.byte	0x51
 2551 034a 0F000000 		.4byte	.LVL55-1
 2552 034e 16000000 		.4byte	.LVL57
 2553 0352 0100     		.2byte	0x1
 2554 0354 55       		.byte	0x55
 2555 0355 16000000 		.4byte	.LVL57
 2556 0359 1C000000 		.4byte	.LFE14
 2557 035d 0800     		.2byte	0x8
 2558 035f F3       		.byte	0xf3
 2559 0360 01       		.uleb128 0x1
 2560 0361 50       		.byte	0x50
 2561 0362 32       		.byte	0x32
 2562 0363 24       		.byte	0x24
 2563 0364 73       		.byte	0x73
 2564 0365 00       		.sleb128 0
 2565 0366 22       		.byte	0x22
 2566 0367 00000000 		.4byte	0
 2567 036b 00000000 		.4byte	0
 2568              	.LLST16:
 2569 036f 00000000 		.4byte	.LVL58
 2570 0373 0C000000 		.4byte	.LVL59
 2571 0377 0100     		.2byte	0x1
 2572 0379 50       		.byte	0x50
 2573 037a 0C000000 		.4byte	.LVL59
 2574 037e 44000000 		.4byte	.LVL65
 2575 0382 0100     		.2byte	0x1
 2576 0384 54       		.byte	0x54
 2577 0385 44000000 		.4byte	.LVL65
 2578 0389 5C000000 		.4byte	.LFE15
 2579 038d 0400     		.2byte	0x4
 2580 038f F3       		.byte	0xf3
 2581 0390 01       		.uleb128 0x1
 2582 0391 50       		.byte	0x50
 2583 0392 9F       		.byte	0x9f
 2584 0393 00000000 		.4byte	0
 2585 0397 00000000 		.4byte	0
 2586              	.LLST17:
 2587 039b 00000000 		.4byte	.LVL58
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 62


 2588 039f 0F000000 		.4byte	.LVL60-1
 2589 03a3 0100     		.2byte	0x1
 2590 03a5 51       		.byte	0x51
 2591 03a6 0F000000 		.4byte	.LVL60-1
 2592 03aa 1A000000 		.4byte	.LVL61
 2593 03ae 0400     		.2byte	0x4
 2594 03b0 F3       		.byte	0xf3
 2595 03b1 01       		.uleb128 0x1
 2596 03b2 51       		.byte	0x51
 2597 03b3 9F       		.byte	0x9f
 2598 03b4 1A000000 		.4byte	.LVL61
 2599 03b8 28000000 		.4byte	.LVL62
 2600 03bc 0100     		.2byte	0x1
 2601 03be 51       		.byte	0x51
 2602 03bf 32000000 		.4byte	.LVL63
 2603 03c3 36000000 		.4byte	.LVL64
 2604 03c7 0100     		.2byte	0x1
 2605 03c9 51       		.byte	0x51
 2606 03ca 00000000 		.4byte	0
 2607 03ce 00000000 		.4byte	0
 2608              	.LLST18:
 2609 03d2 00000000 		.4byte	.LVL67
 2610 03d6 0C000000 		.4byte	.LVL68
 2611 03da 0100     		.2byte	0x1
 2612 03dc 50       		.byte	0x50
 2613 03dd 0C000000 		.4byte	.LVL68
 2614 03e1 26000000 		.4byte	.LVL72
 2615 03e5 0100     		.2byte	0x1
 2616 03e7 55       		.byte	0x55
 2617 03e8 26000000 		.4byte	.LVL72
 2618 03ec 40000000 		.4byte	.LFE16
 2619 03f0 0400     		.2byte	0x4
 2620 03f2 F3       		.byte	0xf3
 2621 03f3 01       		.uleb128 0x1
 2622 03f4 50       		.byte	0x50
 2623 03f5 9F       		.byte	0x9f
 2624 03f6 00000000 		.4byte	0
 2625 03fa 00000000 		.4byte	0
 2626              	.LLST19:
 2627 03fe 00000000 		.4byte	.LVL67
 2628 0402 0F000000 		.4byte	.LVL69-1
 2629 0406 0100     		.2byte	0x1
 2630 0408 51       		.byte	0x51
 2631 0409 0F000000 		.4byte	.LVL69-1
 2632 040d 1A000000 		.4byte	.LVL70
 2633 0411 0400     		.2byte	0x4
 2634 0413 F3       		.byte	0xf3
 2635 0414 01       		.uleb128 0x1
 2636 0415 51       		.byte	0x51
 2637 0416 9F       		.byte	0x9f
 2638 0417 1A000000 		.4byte	.LVL70
 2639 041b 23000000 		.4byte	.LVL71-1
 2640 041f 0100     		.2byte	0x1
 2641 0421 50       		.byte	0x50
 2642 0422 00000000 		.4byte	0
 2643 0426 00000000 		.4byte	0
 2644              	.LLST20:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 63


 2645 042a 00000000 		.4byte	.LVL74
 2646 042e 0C000000 		.4byte	.LVL75
 2647 0432 0100     		.2byte	0x1
 2648 0434 50       		.byte	0x50
 2649 0435 0C000000 		.4byte	.LVL75
 2650 0439 28000000 		.4byte	.LVL80
 2651 043d 0100     		.2byte	0x1
 2652 043f 54       		.byte	0x54
 2653 0440 28000000 		.4byte	.LVL80
 2654 0444 48000000 		.4byte	.LFE17
 2655 0448 0400     		.2byte	0x4
 2656 044a F3       		.byte	0xf3
 2657 044b 01       		.uleb128 0x1
 2658 044c 50       		.byte	0x50
 2659 044d 9F       		.byte	0x9f
 2660 044e 00000000 		.4byte	0
 2661 0452 00000000 		.4byte	0
 2662              	.LLST21:
 2663 0456 00000000 		.4byte	.LVL74
 2664 045a 0F000000 		.4byte	.LVL76-1
 2665 045e 0100     		.2byte	0x1
 2666 0460 51       		.byte	0x51
 2667 0461 0F000000 		.4byte	.LVL76-1
 2668 0465 1A000000 		.4byte	.LVL77
 2669 0469 0400     		.2byte	0x4
 2670 046b F3       		.byte	0xf3
 2671 046c 01       		.uleb128 0x1
 2672 046d 51       		.byte	0x51
 2673 046e 9F       		.byte	0x9f
 2674 046f 1A000000 		.4byte	.LVL77
 2675 0473 1D000000 		.4byte	.LVL78-1
 2676 0477 0100     		.2byte	0x1
 2677 0479 50       		.byte	0x50
 2678 047a 00000000 		.4byte	0
 2679 047e 00000000 		.4byte	0
 2680              		.section	.debug_aranges,"",%progbits
 2681 0000 A4000000 		.4byte	0xa4
 2682 0004 0200     		.2byte	0x2
 2683 0006 00000000 		.4byte	.Ldebug_info0
 2684 000a 04       		.byte	0x4
 2685 000b 00       		.byte	0
 2686 000c 0000     		.2byte	0
 2687 000e 0000     		.2byte	0
 2688 0010 00000000 		.4byte	.LFB1
 2689 0014 8C010000 		.4byte	.LFE1-.LFB1
 2690 0018 00000000 		.4byte	.LFB2
 2691 001c 24000000 		.4byte	.LFE2-.LFB2
 2692 0020 00000000 		.4byte	.LFB0
 2693 0024 20000000 		.4byte	.LFE0-.LFB0
 2694 0028 00000000 		.4byte	.LFB3
 2695 002c 10000000 		.4byte	.LFE3-.LFB3
 2696 0030 00000000 		.4byte	.LFB4
 2697 0034 14000000 		.4byte	.LFE4-.LFB4
 2698 0038 00000000 		.4byte	.LFB5
 2699 003c 14000000 		.4byte	.LFE5-.LFB5
 2700 0040 00000000 		.4byte	.LFB6
 2701 0044 28000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 64


 2702 0048 00000000 		.4byte	.LFB7
 2703 004c 2C000000 		.4byte	.LFE7-.LFB7
 2704 0050 00000000 		.4byte	.LFB8
 2705 0054 10000000 		.4byte	.LFE8-.LFB8
 2706 0058 00000000 		.4byte	.LFB9
 2707 005c 1C000000 		.4byte	.LFE9-.LFB9
 2708 0060 00000000 		.4byte	.LFB10
 2709 0064 18000000 		.4byte	.LFE10-.LFB10
 2710 0068 00000000 		.4byte	.LFB11
 2711 006c 10000000 		.4byte	.LFE11-.LFB11
 2712 0070 00000000 		.4byte	.LFB12
 2713 0074 10000000 		.4byte	.LFE12-.LFB12
 2714 0078 00000000 		.4byte	.LFB13
 2715 007c 1C000000 		.4byte	.LFE13-.LFB13
 2716 0080 00000000 		.4byte	.LFB14
 2717 0084 1C000000 		.4byte	.LFE14-.LFB14
 2718 0088 00000000 		.4byte	.LFB15
 2719 008c 5C000000 		.4byte	.LFE15-.LFB15
 2720 0090 00000000 		.4byte	.LFB16
 2721 0094 40000000 		.4byte	.LFE16-.LFB16
 2722 0098 00000000 		.4byte	.LFB17
 2723 009c 48000000 		.4byte	.LFE17-.LFB17
 2724 00a0 00000000 		.4byte	0
 2725 00a4 00000000 		.4byte	0
 2726              		.section	.debug_ranges,"",%progbits
 2727              	.Ldebug_ranges0:
 2728 0000 00000000 		.4byte	.LFB1
 2729 0004 8C010000 		.4byte	.LFE1
 2730 0008 00000000 		.4byte	.LFB2
 2731 000c 24000000 		.4byte	.LFE2
 2732 0010 00000000 		.4byte	.LFB0
 2733 0014 20000000 		.4byte	.LFE0
 2734 0018 00000000 		.4byte	.LFB3
 2735 001c 10000000 		.4byte	.LFE3
 2736 0020 00000000 		.4byte	.LFB4
 2737 0024 14000000 		.4byte	.LFE4
 2738 0028 00000000 		.4byte	.LFB5
 2739 002c 14000000 		.4byte	.LFE5
 2740 0030 00000000 		.4byte	.LFB6
 2741 0034 28000000 		.4byte	.LFE6
 2742 0038 00000000 		.4byte	.LFB7
 2743 003c 2C000000 		.4byte	.LFE7
 2744 0040 00000000 		.4byte	.LFB8
 2745 0044 10000000 		.4byte	.LFE8
 2746 0048 00000000 		.4byte	.LFB9
 2747 004c 1C000000 		.4byte	.LFE9
 2748 0050 00000000 		.4byte	.LFB10
 2749 0054 18000000 		.4byte	.LFE10
 2750 0058 00000000 		.4byte	.LFB11
 2751 005c 10000000 		.4byte	.LFE11
 2752 0060 00000000 		.4byte	.LFB12
 2753 0064 10000000 		.4byte	.LFE12
 2754 0068 00000000 		.4byte	.LFB13
 2755 006c 1C000000 		.4byte	.LFE13
 2756 0070 00000000 		.4byte	.LFB14
 2757 0074 1C000000 		.4byte	.LFE14
 2758 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 65


 2759 007c 5C000000 		.4byte	.LFE15
 2760 0080 00000000 		.4byte	.LFB16
 2761 0084 40000000 		.4byte	.LFE16
 2762 0088 00000000 		.4byte	.LFB17
 2763 008c 48000000 		.4byte	.LFE17
 2764 0090 00000000 		.4byte	0
 2765 0094 00000000 		.4byte	0
 2766              		.section	.debug_line,"",%progbits
 2767              	.Ldebug_line0:
 2768 0000 97020000 		.section	.debug_str,"MS",%progbits,1
 2768      02004D00 
 2768      00000201 
 2768      FB0E0D00 
 2768      01010101 
 2769              	.LASF10:
 2770 0000 75696E74 		.ascii	"uint16\000"
 2770      313600
 2771              	.LASF49:
 2772 0007 61646347 		.ascii	"adcGain\000"
 2772      61696E00 
 2773              	.LASF24:
 2774 000f 636F756E 		.ascii	"counts\000"
 2774      747300
 2775              	.LASF54:
 2776 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2776      436F756E 
 2776      7473546F 
 2776      5F566F6C 
 2776      747300
 2777              	.LASF26:
 2778 0029 4144435F 		.ascii	"ADC_Init\000"
 2778      496E6974 
 2778      00
 2779              	.LASF7:
 2780 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2780      206C6F6E 
 2780      6720756E 
 2780      7369676E 
 2780      65642069 
 2781              	.LASF25:
 2782 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2782      496E7075 
 2782      7473506C 
 2782      6163656D 
 2782      656E7400 
 2783              	.LASF30:
 2784 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2784      53746172 
 2784      74436F6E 
 2784      76657274 
 2784      00
 2785              	.LASF6:
 2786 006e 6C6F6E67 		.ascii	"long long int\000"
 2786      206C6F6E 
 2786      6720696E 
 2786      7400
 2787              	.LASF0:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 66


 2788 007c 7369676E 		.ascii	"signed char\000"
 2788      65642063 
 2788      68617200 
 2789              	.LASF32:
 2790 0088 73746174 		.ascii	"status\000"
 2790      757300
 2791              	.LASF13:
 2792 008f 696E7433 		.ascii	"int32\000"
 2792      3200
 2793              	.LASF28:
 2794 0095 4144435F 		.ascii	"ADC_Start\000"
 2794      53746172 
 2794      7400
 2795              	.LASF4:
 2796 009f 6C6F6E67 		.ascii	"long int\000"
 2796      20696E74 
 2796      00
 2797              	.LASF53:
 2798 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2798      436F756E 
 2798      7473546F 
 2798      5F75566F 
 2798      6C747300 
 2799              	.LASF59:
 2800 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2800      636F756E 
 2800      74735065 
 2800      72313056 
 2800      6F6C7400 
 2801              	.LASF9:
 2802 00d0 75696E74 		.ascii	"uint8\000"
 2802      3800
 2803              	.LASF61:
 2804 00d6 43794465 		.ascii	"CyDelayUs\000"
 2804      6C617955 
 2804      7300
 2805              	.LASF16:
 2806 00e0 646F7562 		.ascii	"double\000"
 2806      6C6500
 2807              	.LASF11:
 2808 00e7 75696E74 		.ascii	"uint32\000"
 2808      333200
 2809              	.LASF39:
 2810 00ee 6D61736B 		.ascii	"mask\000"
 2810      00
 2811              	.LASF57:
 2812 00f3 4144435F 		.ascii	"ADC_initVar\000"
 2812      696E6974 
 2812      56617200 
 2813              	.LASF35:
 2814 00ff 7265744D 		.ascii	"retMode\000"
 2814      6F646500 
 2815              	.LASF44:
 2816 0107 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2816      5365744C 
 2816      696D6974 
 2816      4D61736B 
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 67


 2816      00
 2817              	.LASF8:
 2818 0118 756E7369 		.ascii	"unsigned int\000"
 2818      676E6564 
 2818      20696E74 
 2818      00
 2819              	.LASF65:
 2820 0125 75566F6C 		.ascii	"uVolts\000"
 2820      747300
 2821              	.LASF5:
 2822 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 2822      20756E73 
 2822      69676E65 
 2822      6420696E 
 2822      7400
 2823              	.LASF45:
 2824 013e 4144435F 		.ascii	"ADC_SetSatMask\000"
 2824      53657453 
 2824      61744D61 
 2824      736B00
 2825              	.LASF55:
 2826 014d 766F6C74 		.ascii	"volts\000"
 2826      7300
 2827              	.LASF23:
 2828 0153 746D7052 		.ascii	"tmpRegVal\000"
 2828      65675661 
 2828      6C00
 2829              	.LASF3:
 2830 015d 73686F72 		.ascii	"short unsigned int\000"
 2830      7420756E 
 2830      7369676E 
 2830      65642069 
 2830      6E7400
 2831              	.LASF66:
 2832 0170 4379496E 		.ascii	"CyIntSetVector\000"
 2832      74536574 
 2832      56656374 
 2832      6F7200
 2833              	.LASF31:
 2834 017f 4144435F 		.ascii	"ADC_StopConvert\000"
 2834      53746F70 
 2834      436F6E76 
 2834      65727400 
 2835              	.LASF52:
 2836 018f 6D566F6C 		.ascii	"mVolts\000"
 2836      747300
 2837              	.LASF19:
 2838 0196 72656733 		.ascii	"reg32\000"
 2838      3200
 2839              	.LASF14:
 2840 019c 666C6F61 		.ascii	"float32\000"
 2840      74333200 
 2841              	.LASF21:
 2842 01a4 73697A65 		.ascii	"sizetype\000"
 2842      74797065 
 2842      00
 2843              	.LASF41:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 68


 2844 01ad 6C6F774C 		.ascii	"lowLimit\000"
 2844      696D6974 
 2844      00
 2845              	.LASF42:
 2846 01b6 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2846      53657448 
 2846      6967684C 
 2846      696D6974 
 2846      00
 2847              	.LASF33:
 2848 01c7 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2848      4973456E 
 2848      64436F6E 
 2848      76657273 
 2848      696F6E00 
 2849              	.LASF62:
 2850 01db 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2850      4320342E 
 2850      392E3320 
 2850      32303135 
 2850      30333033 
 2851 020e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2851      20726576 
 2851      6973696F 
 2851      6E203232 
 2851      31323230 
 2852 0241 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2852      66756E63 
 2852      74696F6E 
 2852      2D736563 
 2852      74696F6E 
 2853              	.LASF17:
 2854 0269 696E7436 		.ascii	"int64\000"
 2854      3400
 2855              	.LASF60:
 2856 026f 4379496E 		.ascii	"CyIntSetPriority\000"
 2856      74536574 
 2856      5072696F 
 2856      72697479 
 2856      00
 2857              	.LASF38:
 2858 0280 4144435F 		.ascii	"ADC_SetChanMask\000"
 2858      53657443 
 2858      68616E4D 
 2858      61736B00 
 2859              	.LASF48:
 2860 0290 4144435F 		.ascii	"ADC_SetGain\000"
 2860      53657447 
 2860      61696E00 
 2861              	.LASF15:
 2862 029c 666C6F61 		.ascii	"float\000"
 2862      7400
 2863              	.LASF43:
 2864 02a2 68696768 		.ascii	"highLimit\000"
 2864      4C696D69 
 2864      7400
 2865              	.LASF50:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 69


 2866 02ac 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2866      436F756E 
 2866      7473546F 
 2866      5F6D566F 
 2866      6C747300 
 2867              	.LASF40:
 2868 02c0 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2868      5365744C 
 2868      6F774C69 
 2868      6D697400 
 2869              	.LASF67:
 2870 02d0 43794861 		.ascii	"CyHalt\000"
 2870      6C7400
 2871              	.LASF63:
 2872 02d7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2872      6E657261 
 2872      7465645F 
 2872      536F7572 
 2872      63655C50 
 2873              	.LASF1:
 2874 02f6 756E7369 		.ascii	"unsigned char\000"
 2874      676E6564 
 2874      20636861 
 2874      7200
 2875              	.LASF58:
 2876 0304 4144435F 		.ascii	"ADC_offset\000"
 2876      6F666673 
 2876      657400
 2877              	.LASF2:
 2878 030f 73686F72 		.ascii	"short int\000"
 2878      7420696E 
 2878      7400
 2879              	.LASF29:
 2880 0319 4144435F 		.ascii	"ADC_Stop\000"
 2880      53746F70 
 2880      00
 2881              	.LASF22:
 2882 0322 63684E75 		.ascii	"chNum\000"
 2882      6D00
 2883              	.LASF36:
 2884 0328 6368616E 		.ascii	"chan\000"
 2884      00
 2885              	.LASF18:
 2886 032d 63686172 		.ascii	"char\000"
 2886      00
 2887              	.LASF20:
 2888 0332 63796973 		.ascii	"cyisraddress\000"
 2888      72616464 
 2888      72657373 
 2888      00
 2889              	.LASF56:
 2890 033f 4144435F 		.ascii	"ADC_channelsConfig\000"
 2890      6368616E 
 2890      6E656C73 
 2890      436F6E66 
 2890      696700
 2891              	.LASF47:
ARM GAS  C:\Users\PERNIL~1\AppData\Local\Temp\ccj0SQXo.s 			page 70


 2892 0352 6F666673 		.ascii	"offset\000"
 2892      657400
 2893              	.LASF51:
 2894 0359 61646343 		.ascii	"adcCounts\000"
 2894      6F756E74 
 2894      7300
 2895              	.LASF64:
 2896 0363 433A5C55 		.ascii	"C:\\Users\\PernilleLouise\\Documents\\Elektro\\4. s"
 2896      73657273 
 2896      5C506572 
 2896      6E696C6C 
 2896      654C6F75 
 2897 0391 656D6573 		.ascii	"emester\\E4PRJ4\\PSoCBilstyring\\Workspace01\\Desig"
 2897      7465725C 
 2897      45345052 
 2897      4A345C50 
 2897      536F4342 
 2898 03c0 6E30312E 		.ascii	"n01.cydsn\000"
 2898      63796473 
 2898      6E00
 2899              	.LASF27:
 2900 03ca 4144435F 		.ascii	"ADC_Enable\000"
 2900      456E6162 
 2900      6C6500
 2901              	.LASF12:
 2902 03d5 696E7431 		.ascii	"int16\000"
 2902      3600
 2903              	.LASF46:
 2904 03db 4144435F 		.ascii	"ADC_SetOffset\000"
 2904      5365744F 
 2904      66667365 
 2904      7400
 2905              	.LASF37:
 2906 03e9 72657375 		.ascii	"result\000"
 2906      6C7400
 2907              	.LASF34:
 2908 03f0 4144435F 		.ascii	"ADC_GetResult16\000"
 2908      47657452 
 2908      6573756C 
 2908      74313600 
 2909              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
